[{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Basic_example.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Basic Example","text":"Population adjustment methods matching-adjusted indirect comparison (MAIC) increasingly used compare marginal treatment effects cross-trial differences effect modifiers limited patient-level data. MAIC based propensity score weighting, sensitive poor covariate overlap extrapolate beyond observed covariate space. Current outcome regression-based alternatives can extrapolate target conditional treatment effect incompatible indirect comparison. adjusting covariates, one must integrate average conditional estimate relevant population recover compatible marginal treatment effect. propose marginalization method based parametric G-computation can easily applied outcome regression generalized linear model Cox model. approach views covariate adjustment regression nuisance model separates estimation evaluation marginal treatment effect interest. method can accommodate Bayesian statistical framework, naturally integrates analysis probabilistic framework. simulation study provides proof--principle benchmarks method’s performance MAIC conventional outcome regression. Parametric G-computation achieves precise accurate estimates MAIC, particularly covariate overlap poor, yields unbiased marginal treatment effect estimates failures assumptions. Furthermore, marginalized regression-adjusted estimates provide greater precision accuracy conditional estimates produced conventional outcome regression.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Basic_example.html","id":"general-problem","dir":"Articles","previous_headings":"","what":"General problem","title":"Basic Example","text":"Consider one AB trial, company IPD, one AC trial, published aggregate data available. wish estimate comparison effects treatments B C appropriate scale target population P, denoted parameter dBC(P)d_{BC(P)}. make use bracketed subscripts denote specific population. Within AB population parameters μA(AB)\\mu_{( AB)}, μB(AB)\\mu_{B(AB)} μC(AB)\\mu_{C(AB)} representing expected outcome treatment (including parameters treatments studied AB trial, e.g. treatment C). AB trial provides estimators Y‾(AB)\\bar{Y}_{(AB)} Y‾B(AB)\\bar{Y}_{B(AB)} μA(AB)\\mu_{( AB)}, μB(AB)\\mu_{B(AB)}, respectively, summary outcomes. situation AC trial. suitable scale, example logit, risk difference, form estimators ΔAB(AB)\\Delta_{AB(AB)} ΔAC(AC)\\Delta_{AC(AC)} trial level (marginal) relative treatment effects. ΔAB(AB)=g(Y‾B(AB))−g(Y‾(AB)) \\Delta_{AB(AB)} = g(\\bar{Y}_{B{(AB)}}) - g(\\bar{Y}_{{(AB)}})","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Basic_example.html","id":"example-analysis","dir":"Articles","previous_headings":"","what":"Example analysis","title":"Basic Example","text":"First, let us load necessary packages.","code":"library(boot)      # non-parametric bootstrap in MAIC and ML G-computation library(copula)    # simulating BC covariates from Gaussian copula library(rstanarm)  # fit outcome regression, draw outcomes in Bayesian G-computation library(outstandR)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Basic_example.html","id":"data","dir":"Articles","previous_headings":"Example analysis","what":"Data","title":"Basic Example","text":"Next, load data use analysis. data comes simulation study Remiro‐Azócar , Heath , Baio G (2020). consider binary outcomes using log-odds ratio measure effect. binary outcome may response treatment occurrence adverse event. trials AC BC, outcome yny_n subject nn simulated Bernoulli distribution probabilities success generated logistic regression. BC trial, individual-level covariates outcomes aggregated obtain summaries. continuous covariates summarized means standard deviations, available analyst published study table baseline characteristics RCT publication. binary outcomes summarized overall event table. Typically, published study provides aggregate information analyst. general format data sets consist following.","code":"set.seed(555)  AC.IPD <- read.csv(here::here(\"raw-data\", \"AC_IPD.csv\"))  # AC patient-level data BC.ALD <- read.csv(here::here(\"raw-data\", \"BC_ALD.csv\"))  # BC aggregate-level data"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Basic_example.html","id":"ac-ipd-individual-patient-data","dir":"Articles","previous_headings":"Example analysis > Data","what":"AC.IPD: Individual patient data","title":"Basic Example","text":"X*: patient measurements trt: treatment ID y: (logical) indicator whether event observed","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Basic_example.html","id":"bc-ald-aggregate-level-data","dir":"Articles","previous_headings":"Example analysis > Data","what":"BC.ALD: Aggregate-level data","title":"Basic Example","text":"mean.X*: mean patient measurement sd.X*: standard deviation patient measurement y.*.sum: total number events y.*.bar: total number events N.*: total number individuals Note wildcard * usually integer 1 trial identifier B, C. data look like following. 4 correlated continuous covariates generated per subject, simulated multivariate normal distribution. case, 4 covariate mean standard deviation values; event total, average sample size treatment B, C.","code":"head(AC.IPD) #>            X1        X2          X3          X4 trt y #> 1  0.43734111 0.6747901  0.93001035  0.09165363   1 0 #> 2  0.05643081 0.5987971  0.03557646  0.59954129   1 1 #> 3 -0.08048882 0.6843784  0.93147222 -0.11419716   1 0 #> 4 -0.38580926 0.5716644 -0.32252212  0.02551808   1 0 #> 5  1.00755116 0.8220826  0.92735892  0.84414221   1 1 #> 6  0.19443956 0.2031329  0.34990179  0.15633009   1 0 BC.ALD #>     mean.X1   mean.X2   mean.X3   mean.X4     sd.X1     sd.X2     sd.X3 #> 1 0.5908996 0.6414179 0.5856529 0.6023671 0.3863145 0.4033615 0.4076097 #>      sd.X4 y.B.sum y.B.bar N.B y.C.sum y.C.bar N.C #> 1 0.395132     182   0.455 400     149   0.745 200"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Basic_example.html","id":"output-statistics","dir":"Articles","previous_headings":"Example analysis","what":"Output statistics","title":"Basic Example","text":"implement MAIC, STC, G-computation methods obtain marginal variance, defined 1nC+1nC‾+1nB+1nB‾ \\frac{1}{n_C} + \\frac{1}{n_{\\bar{C}}} + \\frac{1}{n_B} + \\frac{1}{n_{\\bar{B}}} marginal treatment effect, defined log(nB/(NB−nB)nC/(NB−nB))=log(nBnC‾)−log(nCnB‾) \\log\\left( \\frac{n_B/(N_B-n_B)}{n_C/(N_B-n_{B})} \\right) = \\log(n_B n_{\\bar{C}}) - \\log(n_C n_{\\bar{B}})  C‾\\bar{C} compliment CC e.g. nC‾=NC−ncn_{\\bar{C}} = N_C - n_c.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Basic_example.html","id":"model-fitting-in-r","dir":"Articles","previous_headings":"","what":"Model fitting in R","title":"Basic Example","text":"outstandR package written easy use essential consists single function, outstandR(). can used run different types model, call strategies. first two arguments outstandR() individual aggregate-level data, respectively. strategy argument outstandR takes functions called strategy_*(), wildcard * replaced name particular method required, e.g. strategy_maic() MAIC. specific example provided .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Basic_example.html","id":"maic","dir":"Articles","previous_headings":"Model fitting in R","what":"MAIC","title":"Basic Example","text":"Using individual level data AC firstly perform non-parametric bootstrap maic.boot function R = 1000 replicates. function fits treatment coefficient marginal effect vs C. returned value object class boot {boot} package. calculate bootstrap mean variance wrapper function maic_boot_stats. formula used model y=X3+X4+βtX1+βtX2 y = X_3 + X_4 + \\beta_t X_1 + \\beta_t X_2  corresponds following R formula object passed argument strategy function. returned object class outstandR. see list object 3 parts, containing statistics pair treatments. mean contrasts, variances confidence intervals (CI), respectively. default CI 95% can altered outstandR CI argument.","code":"lin_form <- as.formula(\"y ~ X3 + X4 + trt*X1 + trt*X2\") outstandR_maic <- outstandR(AC.IPD, BC.ALD, strategy = strategy_maic(formula = lin_form)) outstandR_maic #> $contrasts #> $contrasts$AB #> [1] 0.5008915 #>  #> $contrasts$AC #> [1] -1.151838 #>  #> $contrasts$BC #> [1] -1.65273 #>  #>  #> $variances #> $variances$AB #>           [,1] #> [1,] 0.1732497 #>  #> $variances$AC #>           [,1] #> [1,] 0.1368488 #>  #> $variances$BC #> [1] 0.03640091 #>  #>  #> $CI #> $CI$AB #> [1] -0.3149097  1.3166927 #>  #> $CI$AC #> [1] -1.8768893 -0.4267873 #>  #> $CI$BC #> [1] -2.026672 -1.278788 #>  #>  #> attr(,\"CI\") #> [1] 0.95 #> attr(,\"class\") #> [1] \"outstandR\" \"list\""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Basic_example.html","id":"stc","dir":"Articles","previous_headings":"Model fitting in R","what":"STC","title":"Basic Example","text":"STC conventional outcome regression method. involves fitting regression model outcome treatment covariates IPD. IPD effect modifiers centred mean BC values. g(μn)=β0+(𝐱n−𝛉)β1+(βz+(𝐱𝐧𝐄𝐌−𝛉𝐄𝐌)𝛃𝟐)(zn=1) g(\\mu_n) = \\beta_0 + (\\boldsymbol{x}_n - \\boldsymbol{\\theta}) \\beta_1 + (\\beta_z + (\\boldsymbol{x_n^{EM}} - \\boldsymbol{\\theta^{EM}}) \\boldsymbol{\\beta_2}) \\; \\mbox{}(z_n=1)  β0\\beta_0 intercept, β1\\beta_1 covariate coefficients, βz\\beta_z β2\\beta_2 effect modifier coefficients, znz_n indicator variables effect alternative treatment. g(⋅)g(\\cdot) link function e.g. log\\log. already mentioned, running STC analysis almost identical previous analysis now use strategy_stc() strategy function instead formula centered covariates. y=X3+X4+βt(X1−X1‾)+βt(X2−X2‾) y = X_3 + X_4 + \\beta_t(X_1 - \\bar{X_1}) + \\beta_t(X_2 - \\bar{X_2})  However, outstandR() knows handle can simply pass (uncentred) formula . last two approaches, perform G-computation firstly frequentist MLE approach Bayesian approach.","code":"outstandR_stc <- outstandR(AC.IPD, BC.ALD, strategy = strategy_stc(formula = lin_form)) outstandR_stc #> $contrasts #> $contrasts$AB #>     trt  #> 0.22425  #>  #> $contrasts$AC #>      trt  #> -1.42848  #>  #> $contrasts$BC #> [1] -1.65273 #>  #>  #> $variances #> $variances$AB #> [1] 0.1690646 #>  #> $variances$AC #> [1] 0.1326637 #>  #> $variances$BC #> [1] 0.03640091 #>  #>  #> $CI #> $CI$AB #> [1] -0.5816375  1.0301375 #>  #> $CI$AC #> [1] -2.1423580 -0.7146016 #>  #> $CI$BC #> [1] -2.026672 -1.278788 #>  #>  #> attr(,\"CI\") #> [1] 0.95 #> attr(,\"class\") #> [1] \"outstandR\" \"list\""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Basic_example.html","id":"parametric-g-computation-with-maximum-likelihood-estimation","dir":"Articles","previous_headings":"Model fitting in R","what":"Parametric G-computation with maximum-likelihood estimation","title":"Basic Example","text":"G-computation marginalizes conditional estimates separating regression modelling estimation marginal treatment effect versus C. First, regression model observed outcome yy covariates xx treatment zz fitted AC IPD: g(μn)=β0+𝐱n𝛃𝟏+(βz+𝐱𝐧𝐄𝐌𝛃𝟐)(zn=1) g(\\mu_n) = \\beta_0 + \\boldsymbol{x}_n \\boldsymbol{\\beta_1} + (\\beta_z + \\boldsymbol{x_n^{EM}} \\boldsymbol{\\beta_2}) \\; \\mbox{}(z_n = 1) context G-computation, regression model often called “Q-model.” fitted Q-model, regression coefficients treated nuisance parameters. parameters applied simulated covariates x*x* predict hypothetical outcomes subject possible treatments. Namely, pair predicted outcomes, also called potential outcomes, C, generated subject. plugging treatment C regression fit every simulated observation, predict marginal outcome mean hypothetical scenario units treatment C: μ̂0=∫x*g−1(β̂0+x*β̂1)p(x*)dx* \\hat{\\mu}_0 = \\int_{x^*} g^{-1} (\\hat{\\beta}_0 + x^* \\hat{\\beta}_1 ) p(x^*) \\; \\text{d}x^* estimate marginal population-average treatment effect versus C linear predictor scale, one back-transforms scale average predictions, taken subjects natural outcome scale, calculates difference average linear predictions: Δ̂10(2)=g(μ̂1)−g(μ̂0) \\hat{\\Delta}^{(2)}_{10} = g(\\hat{\\mu}_1) - g(\\hat{\\mu}_0)","code":"outstandR_gcomp_ml <- outstandR(AC.IPD, BC.ALD, strategy = strategy_gcomp_ml(formula = lin_form)) outstandR_gcomp_ml #> $contrasts #> $contrasts$AB #> [1] 0.5645192 #>  #> $contrasts$AC #> [1] -1.088211 #>  #> $contrasts$BC #> [1] -1.65273 #>  #>  #> $variances #> $variances$AB #>           [,1] #> [1,] 0.1425196 #>  #> $variances$AC #>           [,1] #> [1,] 0.1061187 #>  #> $variances$BC #> [1] 0.03640091 #>  #>  #> $CI #> $CI$AB #> [1] -0.1754018  1.3044402 #>  #> $CI$AC #> [1] -1.7266857 -0.4497354 #>  #> $CI$BC #> [1] -2.026672 -1.278788 #>  #>  #> attr(,\"CI\") #> [1] 0.95 #> attr(,\"class\") #> [1] \"outstandR\" \"list\""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Basic_example.html","id":"bayesian-g-computation-with-mcmc","dir":"Articles","previous_headings":"Model fitting in R","what":"Bayesian G-computation with MCMC","title":"Basic Example","text":"difference Bayesian G-computation maximum-likelihood counterpart estimated distribution predicted outcomes. Bayesian approach also marginalizes, integrates standardizes joint posterior distribution conditional nuisance parameters outcome regression, well joint covariate distribution. Draw vector size N*N^* predicted outcomes yz*y^*_z set intervention z*∈{0,1}z^* \\\\{0, 1\\} posterior predictive distribution specific treatment. defined p(yz**∣𝒟AC)=∫βp(yz**∣β)p(β∣𝒟AC)dβp(y^*_{z^*} \\mid \\mathcal{D}_{AC}) = \\int_{\\beta} p(y^*_{z^*} \\mid \\beta) p(\\beta \\mid \\mathcal{D}_{AC}) d\\beta p(β∣𝒟AC)p(\\beta \\mid \\mathcal{D}_{AC}) posterior distribution outcome regression coefficients β\\beta, encode predictor-outcome relationships observed AC trial IPD. given : p(yz**∣𝒟AC)=∫x*p(y*∣z*,x*,𝒟AC)p(x*∣𝒟AC)dx* p(y^*_{^z*} \\mid \\mathcal{D}_{AC}) = \\int_{x^*} p(y^* \\mid z^*, x^*, \\mathcal{D}_{AC}) p(x^* \\mid \\mathcal{D}_{AC})\\; \\text{d}x^* =∫x*∫βp(y*∣z*,x*,β)p(x*∣β)p(β∣𝒟AC)dβdx* = \\int_{x^*} \\int_{\\beta} p(y^* \\mid z^*, x^*, \\beta) p(x^* \\mid \\beta) p(\\beta \\mid \\mathcal{D}_{AC})\\; d\\beta \\; \\text{d}x^* practice, integrals can approximated numerically, using full Bayesian estimation via Markov chain Monte Carlo (MCMC) sampling. average, variance interval estimates marginal treatment effect can derived empirically draws posterior density. can draw vector size N*N^* predicted outcomes yz*y^*_z set intervention z*z^* posterior predictive distribution specific treatment.","code":"outstandR_gcomp_stan <- outstandR(AC.IPD, BC.ALD, strategy = strategy_gcomp_stan(formula = lin_form)) #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 3.8e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.38 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 1: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 1: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 1: Iteration: 1200 / 4000 [ 30%]  (Warmup) #> Chain 1: Iteration: 1600 / 4000 [ 40%]  (Warmup) #> Chain 1: Iteration: 2000 / 4000 [ 50%]  (Warmup) #> Chain 1: Iteration: 2001 / 4000 [ 50%]  (Sampling) #> Chain 1: Iteration: 2400 / 4000 [ 60%]  (Sampling) #> Chain 1: Iteration: 2800 / 4000 [ 70%]  (Sampling) #> Chain 1: Iteration: 3200 / 4000 [ 80%]  (Sampling) #> Chain 1: Iteration: 3600 / 4000 [ 90%]  (Sampling) #> Chain 1: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.522 seconds (Warm-up) #> Chain 1:                0.499 seconds (Sampling) #> Chain 1:                1.021 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 1.8e-05 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.18 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 2: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 2: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 2: Iteration: 1200 / 4000 [ 30%]  (Warmup) #> Chain 2: Iteration: 1600 / 4000 [ 40%]  (Warmup) #> Chain 2: Iteration: 2000 / 4000 [ 50%]  (Warmup) #> Chain 2: Iteration: 2001 / 4000 [ 50%]  (Sampling) #> Chain 2: Iteration: 2400 / 4000 [ 60%]  (Sampling) #> Chain 2: Iteration: 2800 / 4000 [ 70%]  (Sampling) #> Chain 2: Iteration: 3200 / 4000 [ 80%]  (Sampling) #> Chain 2: Iteration: 3600 / 4000 [ 90%]  (Sampling) #> Chain 2: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.508 seconds (Warm-up) #> Chain 2:                0.534 seconds (Sampling) #> Chain 2:                1.042 seconds (Total) #> Chain 2: outstandR_gcomp_stan #> $contrasts #> $contrasts$AB #> [1] 0.5614387 #>  #> $contrasts$AC #> [1] -1.091291 #>  #> $contrasts$BC #> [1] -1.65273 #>  #>  #> $variances #> $variances$AB #> [1] 0.137929 #>  #> $variances$AC #> [1] 0.1015281 #>  #> $variances$BC #> [1] 0.03640091 #>  #>  #> $CI #> $CI$AB #> [1] -0.1664684  1.2893457 #>  #> $CI$AC #> [1] -1.7158038 -0.4667785 #>  #> $CI$BC #> [1] -2.026672 -1.278788 #>  #>  #> attr(,\"CI\") #> [1] 0.95 #> attr(,\"class\") #> [1] \"outstandR\" \"list\""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Basic_example.html","id":"multiple-imputation-marginalisation","dir":"Articles","previous_headings":"Model fitting in R","what":"Multiple imputation marginalisation","title":"Basic Example","text":"ref equationhere equation Combine outputs","code":"outstandR_mim <- outstandR(AC.IPD, BC.ALD, strategy = strategy_mim(formula = lin_form)) #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 2.3e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.23 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 1: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 1: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 1: Iteration: 1001 / 4000 [ 25%]  (Sampling) #> Chain 1: Iteration: 1400 / 4000 [ 35%]  (Sampling) #> Chain 1: Iteration: 1800 / 4000 [ 45%]  (Sampling) #> Chain 1: Iteration: 2200 / 4000 [ 55%]  (Sampling) #> Chain 1: Iteration: 2600 / 4000 [ 65%]  (Sampling) #> Chain 1: Iteration: 3000 / 4000 [ 75%]  (Sampling) #> Chain 1: Iteration: 3400 / 4000 [ 85%]  (Sampling) #> Chain 1: Iteration: 3800 / 4000 [ 95%]  (Sampling) #> Chain 1: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.254 seconds (Warm-up) #> Chain 1:                0.751 seconds (Sampling) #> Chain 1:                1.005 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 1.8e-05 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.18 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 2: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 2: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 2: Iteration: 1001 / 4000 [ 25%]  (Sampling) #> Chain 2: Iteration: 1400 / 4000 [ 35%]  (Sampling) #> Chain 2: Iteration: 1800 / 4000 [ 45%]  (Sampling) #> Chain 2: Iteration: 2200 / 4000 [ 55%]  (Sampling) #> Chain 2: Iteration: 2600 / 4000 [ 65%]  (Sampling) #> Chain 2: Iteration: 3000 / 4000 [ 75%]  (Sampling) #> Chain 2: Iteration: 3400 / 4000 [ 85%]  (Sampling) #> Chain 2: Iteration: 3800 / 4000 [ 95%]  (Sampling) #> Chain 2: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.262 seconds (Warm-up) #> Chain 2:                0.768 seconds (Sampling) #> Chain 2:                1.03 seconds (Total) #> Chain 2: outstandR_mim #> $contrasts #> $contrasts$AB #> [1] 0.5811889 #>  #> $contrasts$AC #> [1] -1.071541 #>  #> $contrasts$BC #> [1] -1.65273 #>  #>  #> $variances #> $variances$AB #> [1] 0.1330941 #>  #> $variances$AC #> [1] 0.09669322 #>  #> $variances$BC #> [1] 0.03640091 #>  #>  #> $CI #> $CI$AB #> [1] -0.1338465  1.2962243 #>  #> $CI$AC #> [1] -1.6810021 -0.4620796 #>  #> $CI$BC #> [1] -2.026672 -1.278788 #>  #>  #> attr(,\"CI\") #> [1] 0.95 #> attr(,\"class\") #> [1] \"outstandR\" \"list\" knitr::kable(   data.frame(   `MAIC` = unlist(outstandR_maic$contrasts),   `STC` = unlist(outstandR_stc$contrasts),   `Gcomp ML` = unlist(outstandR_gcomp_ml$contrasts),   `Gcomp Bayes` = unlist(outstandR_gcomp_stan$contrasts),   `MIM` = unlist(outstandR_mim$contrasts)) )"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Binary data example","text":"Population adjustment methods matching-adjusted indirect comparison (MAIC) increasingly used compare marginal treatment effects cross-trial differences effect modifiers limited patient-level data. MAIC based propensity score weighting, sensitive poor covariate overlap extrapolate beyond observed covariate space. Current outcome regression-based alternatives can extrapolate target conditional treatment effect incompatible indirect comparison. adjusting covariates, one must integrate average conditional estimate relevant population recover compatible marginal treatment effect. propose marginalization method based parametric G-computation can easily applied outcome regression generalized linear model Cox model. approach views covariate adjustment regression nuisance model separates estimation evaluation marginal treatment effect interest. method can accommodate Bayesian statistical framework, naturally integrates analysis probabilistic framework. simulation study provides proof--principle benchmarks method’s performance MAIC conventional outcome regression. Parametric G-computation achieves precise accurate estimates MAIC, particularly covariate overlap poor, yields unbiased marginal treatment effect estimates failures assumptions. Furthermore, marginalized regression-adjusted estimates provide greater precision accuracy conditional estimates produced conventional outcome regression.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"general-problem","dir":"Articles","previous_headings":"","what":"General problem","title":"Binary data example","text":"Consider one trial, company IPD, comparing treatments C, herein call AC trial. Also, consider second trial comparing treatments B C, similarly called BC trial. trial published aggregate data available. wish estimate comparison effects treatments B appropriate scale target population P, denoted parameter dAB(P)d_{AB(P)}. make use bracketed subscripts denote specific population. Within BC population parameters μB(BC)\\mu_{B(BC)} μC(BC)\\mu_{C(BC)} representing expected outcome treatment (including parameters treatments studied BC trial, e.g. treatment ). BC trial provides estimators Y‾B(BC)\\bar{Y}_{B(BC)} Y‾C(BC)\\bar{Y}_{C(BC)} μB(BC)\\mu_{B(BC)}, μC(BC)\\mu_{C(BC)}, respectively, summary outcomes. situation AC trial. suitable scale, example log-odds ratio, risk difference, form estimators ΔBC(BC)\\Delta_{BC(BC)} ΔAC(AC)\\Delta_{AC(AC)} trial level (marginal) relative treatment effects. shall assume always represented difference , example, risk ratio log scale. ΔAB(BC)=g(Y‾B(BC))−g(Y‾(BC)) \\Delta_{AB(BC)} = g(\\bar{Y}_{B{(BC)}}) - g(\\bar{Y}_{{(BC)}})","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"example-analysis","dir":"Articles","previous_headings":"","what":"Example analysis","title":"Binary data example","text":"First, let us load necessary packages.","code":"library(boot)      # non-parametric bootstrap in MAIC and ML G-computation library(copula)    # simulating BC covariates from Gaussian copula library(rstanarm)  # fit outcome regression, draw outcomes in Bayesian G-computation library(outstandR) library(simcovariates)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"data","dir":"Articles","previous_headings":"Example analysis","what":"Data","title":"Binary data example","text":"consider binary outcomes using log-odds ratio measure effect. example, binary outcome may response treatment occurrence adverse event. trials AC BC, outcome yiy_i subject ii simulated Bernoulli distribution probabilities success generated logistic regression. BC trial, individual-level covariates outcomes aggregated obtain summaries. continuous covariates summarized means standard deviations, available analyst published study table baseline characteristics RCT publication. binary outcomes summarized overall event table. Typically, published study provides aggregate information analyst. IPD simulation input parameters given . shall use gen_data() function available simcovariates package. treatment column return data binary takes values 0 1. include extra information treatment names. define lable two level factor 1 C 0 follows. Similarly, obtain aggregate data simulate IPD additional summarise step. set different mean values meanX_BC meanX_EM_BC otherwise use parameter values ACAC case. general format data sets consist following.","code":"library(dplyr) library(MASS)  N <- 200 allocation <- 2/3      # active treatment vs. placebo allocation ratio (2:1) b_trt <- log(0.17)     # conditional effect of active treatment vs. common comparator b_X <- -log(0.5)       # conditional effect of each prognostic variable b_EM <- -log(0.67)     # conditional interaction effect of each effect modifier meanX_AC <- c(0.45, 0.45)       # mean of normally-distributed covariate in AC trial meanX_BC <- c(0.6, 0.6)         # mean of each normally-distributed covariate in BC meanX_EM_AC <- c(0.45, 0.45)    # mean of normally-distributed EM covariate in AC trial meanX_EM_BC <- c(0.6, 0.6)      # mean of each normally-distributed EM covariate in BC sdX <- c(0.4, 0.4)     # standard deviation of each covariate (same for AC and BC) sdX_EM <- c(0.4, 0.4)  # standard deviation of each EM covariate corX <- 0.2            # covariate correlation coefficient   b_0 <- -0.6            # baseline intercept coefficient  ##TODO: fixed value  ipd_trial <- gen_data(N, b_trt, b_X, b_EM, b_0,                       meanX_AC, sdX,                        meanX_EM_AC, sdX_EM,                        corX, allocation,                       family = binomial(\"logit\")) ipd_trial$trt <- factor(ipd_trial$trt, labels = c(\"C\", \"A\")) BC.IPD <- gen_data(N, b_trt, b_X, b_EM, b_0,                    meanX_BC, sdX,                     meanX_EM_BC, sdX_EM,                     corX, allocation,                    family = binomial(\"logit\"))  cov.X <- BC.IPD %>%   summarise(across(starts_with(\"X\"),                    list(mean = mean, sd = sd),                    .names = \"{fn}.{col}\"))  out.B <- dplyr::filter(BC.IPD, trt == 1) %>%   summarise(y.B.sum = sum(y),             y.B.bar = mean(y),             y.B.sd = sd(y),             N.B = n())  out.C <- dplyr::filter(BC.IPD, trt == 0) %>%   summarise(y.C.sum = sum(y),             y.C.bar = mean(y),             y.C.sd = sd(y),             N.C = n())  ald_trial <- cbind.data.frame(cov.X, out.C, out.B)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"ipd_trial-individual-patient-data","dir":"Articles","previous_headings":"Example analysis > Data","what":"ipd_trial: Individual patient data","title":"Binary data example","text":"X*: patient measurements trt: treatment ID (integer) y: (logical) indicator whether event observed","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"ald_trial-aggregate-level-data","dir":"Articles","previous_headings":"Example analysis > Data","what":"ald_trial: Aggregate-level data","title":"Binary data example","text":"mean.X*: mean patient measurement sd.X*: standard deviation patient measurement y.*.sum: total number events y.*.bar: proportion events N.*: total number individuals Note wildcard * usually integer 1 trial identifier B, C. data look like following. 4 correlated continuous covariates generated per subject, simulated multivariate normal distribution. Treatment trt 1 corresponds new treatment , 0 standard care status quo C. ITC ‘anchored’ via C, common treatment. case, 4 covariate mean standard deviation values; event total, average sample size treatment B, C.","code":"head(ipd_trial) #>           X1         X2         X3         X4 trt y #> 1 0.42066874  1.0957407 0.37118099  1.3291540   A 1 #> 2 0.51227329  0.9079984 0.30560144 -0.1842358   A 0 #> 3 1.00347612  0.8136847 1.25054503  1.1986315   A 0 #> 4 0.05641685  0.5318140 0.54799796  0.6694090   A 0 #> 5 0.42997845  0.5274304 0.09140568  0.1222184   A 0 #> 6 0.06916082 -0.3125090 0.99150666 -0.1102693   A 0 ald_trial #>    mean.X1     sd.X1  mean.X2     sd.X2   mean.X3     sd.X3  mean.X4     sd.X4 #> 1 0.568822 0.3972807 0.623277 0.3850408 0.5787528 0.3906499 0.565223 0.3789089 #>   y.C.sum   y.C.bar    y.C.sd N.C y.B.sum   y.B.bar    y.B.sd N.B #> 1      34 0.5074627 0.5037175  67      34 0.2556391 0.4378691 133"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"regression-model","dir":"Articles","previous_headings":"Example analysis > Data","what":"Regression model","title":"Binary data example","text":"true logistic outcome model use simulate data logit(pt)=β0+βX(X3+X4)+[βt+βEM(X1+X2)](t≠C) \\text{logit}(p_{t}) = \\beta_0 + \\beta_X (X_3 + X_4) + [\\beta_{t} + \\beta_{EM} (X_1 + X_2)] \\; \\text{}(t \\neq C) , treatment CC right hand side becomes β0+βX(X3+X4)\\beta_0 + \\beta_X (X_3 + X_4) comparator treatments AA BB additional βt+βEM(X1+X2)\\beta_t + \\beta_{EM} (X_1 + X_2) component consisting effect modifier terms coefficient treatment parameter log odds-ratio (LOR), βt\\beta_t (b_trt R code). ptp_{t} probability experiencing event interest treatment tt.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"output-statistics","dir":"Articles","previous_headings":"Example analysis","what":"Output statistics","title":"Binary data example","text":"implement MAIC, STC, G-computation methods obtain marginal treatment effect marginal variance. definition calculated depends type data outcome scale. current example binary data log-odds ratio marginal treatment effect log(nB/(NB−nB)nC/(NB−nB))=log(nBnC‾)−log(nCnB‾) \\log\\left( \\frac{n_B/(N_B-n_B)}{n_C/(N_B-n_{B})} \\right) = \\log(n_B n_{\\bar{C}}) - \\log(n_C n_{\\bar{B}}) marginal variance 1nC+1nC‾+1nB+1nB‾ \\frac{1}{n_C} + \\frac{1}{n_{\\bar{C}}} + \\frac{1}{n_B} + \\frac{1}{n_{\\bar{B}}}  nB,nCn_B, n_C number events arm C‾\\bar{C} compliment CC, e.g. nC‾=NC−ncn_{\\bar{C}} = N_C - n_c. scales discussed .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"model-fitting-in-r","dir":"Articles","previous_headings":"","what":"Model fitting in R","title":"Binary data example","text":"outstandR package written easy use essential consists single function, outstandR(). can used run different types model, call strategies. first two arguments outstandR() individual aggregate-level data, respectively. strategy argument outstandR takes functions called strategy_*(), wildcard * replaced name particular method required, e.g. strategy_maic() MAIC. specific example provided .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"model-formula","dir":"Articles","previous_headings":"Model fitting in R","what":"Model formula","title":"Binary data example","text":"Defining X1,X2X_1, X_2 effect modifiers, X3,X4X_3, X_4 prognostic variables ZZ treatment indicator formula used model y=X3+X4+Z+ZX1+ZX2 y = X_3 + X_4 + Z + Z X_1 + Z X_2 corresponds following R formula object passed argument strategy function. Note succinct formula also include X1,X2X_1, X_2 prognostic factors equivalent, modified follows.","code":"lin_form <- as.formula(\"y ~ X3 + X4 + trt + trt:X1 + trt:X2\") y ~ X3 + X4 + trt*(X1 + X2) y ~ X3 + X4 + trt*(X1 + X2) - X1 - X2"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"maic","dir":"Articles","previous_headings":"Model fitting in R","what":"MAIC","title":"Binary data example","text":"Using individual level data AC firstly perform non-parametric bootstrap maic.boot function R = 1000 replicates. function fits treatment coefficient marginal effect vs C. returned value object class boot {boot} package. calculate bootstrap mean variance wrapper function maic_boot_stats. returned object class outstandR. see list object 3 parts, containing statistics pair treatments. mean contrasts, variances confidence intervals (CI), respectively. default CI 95% can altered outstandR CI argument. print method available outstandR objects human-readable output","code":"outstandR_maic <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_maic(               formula = lin_form,               family = binomial(link = \"logit\"))) str(outstandR_maic) #> List of 2 #>  $ contrasts:List of 3 #>   ..$ means    :List of 3 #>   .. ..$ AB: num -1 #>   .. ..$ AC: num -2.1 #>   .. ..$ BC: num -1.1 #>   ..$ variances:List of 3 #>   .. ..$ AB: num 0.259 #>   .. ..$ AC: num 0.16 #>   .. ..$ BC: num 0.0992 #>   ..$ CI       :List of 3 #>   .. ..$ AB: num [1:2] -1.99888 -0.00345 #>   .. ..$ AC: num [1:2] -2.88 -1.32 #>   .. ..$ BC: num [1:2] -1.716 -0.481 #>  $ absolute :List of 2 #>   ..$ means    :List of 2 #>   .. ..$ A: Named num 0.227 #>   .. .. ..- attr(*, \"names\")= chr \"mean_A\" #>   .. ..$ C: Named num 0.698 #>   .. .. ..- attr(*, \"names\")= chr \"mean_C\" #>   ..$ variances:List of 2 #>   .. ..$ A: Named num 0.00202 #>   .. .. ..- attr(*, \"names\")= chr \"mean_A\" #>   .. ..$ C: Named num 0.0035 #>   .. .. ..- attr(*, \"names\")= chr \"mean_C\" #>  - attr(*, \"CI\")= num 0.95 #>  - attr(*, \"ref_trt\")= chr \"C\" #>  - attr(*, \"scale\")= chr \"log_odds\" #>  - attr(*, \"model\")= chr \"binomial\" #>  - attr(*, \"class\")= chr [1:2] \"outstandR\" \"list\" outstandR_maic #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_odds  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB            -1.00    0.259       -2.00   -0.00345 #> 2 AC            -2.10    0.160       -2.88   -1.32    #> 3 BC            -1.10    0.0992      -1.72   -0.481   #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A             0.227   0.00202 NA         NA         #> 2 C             0.698   0.00350 NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"outcome-scale","dir":"Articles","previous_headings":"Model fitting in R > MAIC","what":"Outcome scale","title":"Binary data example","text":"explicitly specify outcome scale, default used fit data regression model. saw, case, default log-odds ratio corresponding \"logit\" link function binary data. However, can change scale may appropriate particular analysis. far implemented package, links corresponding relative treatment effect scales follows: full list possible transformed treatment effect scales : log-odds ratio, log-risk ratio, mean difference, risk difference, hazard ratio, hazard difference. binary data marginal treatment effect variance Log-risk ratio Treatment effect log(nB/NB)−log(nA/NA) \\log(n_B/N_B) - \\log(n_A/N_A)  variance 1nB−1NB+1nA−1NA \\frac{1}{n_B} - \\frac{1}{N_B} + \\frac{1}{n_A} - \\frac{1}{N_A} Risk difference Treatment effect nBNB−nANA \\frac{n_B}{N_B} - \\frac{n_A}{N_A}  variance nBNB(1−nBNB)+nANA(1−nANA) \\frac{n_B}{N_B} \\left( 1 - \\frac{n_B}{N_B} \\right) + \\frac{n_A}{N_A} \\left( 1 - \\frac{n_A}{N_A} \\right) change outcome scale, can pass scale argument outstandR() function. example, change scale risk difference, can use following code.","code":"outstandR_maic_lrr <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_maic(formula = lin_form,                                      family = binomial(link = \"logit\")),             scale = \"log_relative_risk\") outstandR_maic_lrr #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_relative_risk  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.458    0.0870      -1.04      0.120 #> 2 AC           -1.14     0.0507      -1.59     -0.703 #> 3 BC           -0.686    0.0364      -1.06     -0.312 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A             0.225   0.00198 NA         NA         #> 2 C             0.695   0.00335 NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"simulated-treatment-comparison","dir":"Articles","previous_headings":"Model fitting in R","what":"Simulated treatment comparison","title":"Binary data example","text":"Simulated treatment comparison (STC) conventional outcome regression method. involves fitting regression model outcome treatment covariates IPD. IPD effect modifiers centred mean BC values. g(μn)=β0+βX(𝐱n−𝛉)+𝛃𝐄𝐌(βt+(𝐱𝐧𝐄𝐌−𝛉𝐄𝐌))(t≠C) g(\\mu_n) = \\beta_0 + \\beta_X (\\boldsymbol{x}_n - \\boldsymbol{\\theta}) + \\boldsymbol{\\beta_{EM}} (\\beta_t + (\\boldsymbol{x_n^{EM}} - \\boldsymbol{\\theta^{EM}}) ) \\; \\mbox{}(t \\neq C) β0\\beta_0 intercept, β1\\beta_1 covariate coefficients, βz\\beta_z β2\\beta_2 effect modifier coefficients, znz_n indicator variables effect alternative treatment. g(⋅)g(\\cdot) link function e.g. log\\log. already mentioned, running STC analysis almost identical previous analysis now use strategy_stc() strategy function instead formula centered covariates. y=X3+X4+Z+Z(X1−X1‾)+Z(X2−X2‾) y = X_3 + X_4 + Z + Z (X_1 - \\bar{X_1}) + Z (X_2 - \\bar{X_2}) However, outstandR() knows handle can simply pass (uncentred) formula . Change outcome scale last two approaches, perform G-computation firstly frequentist MLE Bayesian approach.","code":"outstandR_stc <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_stc(               formula = lin_form,               family = binomial(link = \"logit\"))) outstandR_stc #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_odds  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB            -1.12   NA           NA        NA     #> 2 AC            -2.21   NA           NA        NA     #> 3 BC            -1.10    0.0992      -1.72     -0.481 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A             0.153        NA NA         NA         #> 2 C             0.624        NA NA         NA outstandR_stc_lrr <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_stc(               formula = lin_form,               family = binomial(link = \"logit\")),             scale = \"log_relative_risk\") outstandR_stc_lrr #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_relative_risk  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.718   NA           NA        NA     #> 2 AC           -1.40    NA           NA        NA     #> 3 BC           -0.686    0.0364      -1.06     -0.312 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A             0.153        NA NA         NA         #> 2 C             0.624        NA NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"parametric-g-computation-with-maximum-likelihood-estimation","dir":"Articles","previous_headings":"Model fitting in R","what":"Parametric G-computation with maximum-likelihood estimation","title":"Binary data example","text":"G-computation marginalizes conditional estimates separating regression modelling estimation marginal treatment effect versus C. First, regression model observed outcome yy covariates xx treatment zz fitted AC IPD: g(μn)=β0+𝐱n𝛃𝐗+(βz+𝐱𝐧𝐄𝐌𝛃𝐄𝐌)(t≠C) g(\\mu_n) = \\beta_0 + \\boldsymbol{x}_n \\boldsymbol{\\beta_X} + (\\beta_z + \\boldsymbol{x_n^{EM}} \\boldsymbol{\\beta_{EM}}) \\; \\mbox{}(t \\neq C) context G-computation, regression model often called “Q-model.” fitted Q-model, regression coefficients treated nuisance parameters. parameters applied simulated covariates x*x* predict hypothetical outcomes subject possible treatments. Namely, pair predicted outcomes, also called potential outcomes, C, generated subject. plugging treatment C regression fit every simulated observation, predict marginal outcome mean hypothetical scenario units treatment C: μ̂0=∫x*g−1(β̂0+x*β̂1)p(x*)dx* \\hat{\\mu}_0 = \\int_{x^*} g^{-1} (\\hat{\\beta}_0 + x^* \\hat{\\beta}_1 ) p(x^*) \\; \\text{d}x^* estimate marginal population-average treatment effect versus C linear predictor scale, one back-transforms scale average predictions, taken subjects natural outcome scale, calculates difference average linear predictions: Δ̂10(2)=g(μ̂1)−g(μ̂0) \\hat{\\Delta}^{(2)}_{10} = g(\\hat{\\mu}_1) - g(\\hat{\\mu}_0) Change outcome scale","code":"outstandR_gcomp_ml <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_gcomp_ml(               formula = lin_form,               family = binomial(link = \"logit\")))  outstandR_gcomp_ml #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_odds  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.966    0.242       -1.93   -0.00274 #> 2 AC           -2.06     0.142       -2.80   -1.33    #> 3 BC           -1.10     0.0992      -1.72   -0.481   #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A             0.224   0.00189 NA         NA         #> 2 C             0.687   0.00340 NA         NA outstandR_gcomp_ml_lrr <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_gcomp_ml(               formula = lin_form,               family = binomial(link = \"logit\")),             scale = \"log_relative_risk\") outstandR_gcomp_ml_lrr #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_relative_risk  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.463    0.0869      -1.04      0.115 #> 2 AC           -1.15     0.0505      -1.59     -0.708 #> 3 BC           -0.686    0.0364      -1.06     -0.312 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A             0.223   0.00205 NA         NA         #> 2 C             0.691   0.00348 NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"bayesian-g-computation-with-mcmc","dir":"Articles","previous_headings":"Model fitting in R","what":"Bayesian G-computation with MCMC","title":"Binary data example","text":"difference Bayesian G-computation maximum-likelihood counterpart estimated distribution predicted outcomes. Bayesian approach also marginalizes, integrates standardizes joint posterior distribution conditional nuisance parameters outcome regression, well joint covariate distribution. Draw vector size N*N^* predicted outcomes yz*y^*_z set intervention z*∈{0,1}z^* \\\\{0, 1\\} posterior predictive distribution specific treatment. defined p(yz**∣𝒟AC)=∫βp(yz**∣β)p(β∣𝒟AC)dβp(y^*_{z^*} \\mid \\mathcal{D}_{AC}) = \\int_{\\beta} p(y^*_{z^*} \\mid \\beta) p(\\beta \\mid \\mathcal{D}_{AC}) d\\beta p(β∣𝒟AC)p(\\beta \\mid \\mathcal{D}_{AC}) posterior distribution outcome regression coefficients β\\beta, encode predictor-outcome relationships observed AC trial IPD. given : p(yz**∣𝒟AC)=∫x*p(y*∣z*,x*,𝒟AC)p(x*∣𝒟AC)dx* p(y^*_{^z*} \\mid \\mathcal{D}_{AC}) = \\int_{x^*} p(y^* \\mid z^*, x^*, \\mathcal{D}_{AC}) p(x^* \\mid \\mathcal{D}_{AC})\\; \\text{d}x^* =∫x*∫βp(y*∣z*,x*,β)p(x*∣β)p(β∣𝒟AC)dβdx* = \\int_{x^*} \\int_{\\beta} p(y^* \\mid z^*, x^*, \\beta) p(x^* \\mid \\beta) p(\\beta \\mid \\mathcal{D}_{AC})\\; d\\beta \\; \\text{d}x^* practice, integrals can approximated numerically, using full Bayesian estimation via Markov chain Monte Carlo (MCMC) sampling. average, variance interval estimates marginal treatment effect can derived empirically draws posterior density. can draw vector size N*N^* predicted outcomes yz*y^*_z set intervention z*z^* posterior predictive distribution specific treatment. , can change outcome scale.","code":"outstandR_gcomp_stan <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_gcomp_stan(               formula = lin_form,               family = binomial(link = \"logit\"))) outstandR_gcomp_stan #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_odds  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.986    0.242       -1.95    -0.0218 #> 2 AC           -2.08     0.143       -2.82    -1.34   #> 3 BC           -1.10     0.0992      -1.72    -0.481  #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A             0.225   0.00199 NA         NA         #> 2 C             0.693   0.00340 NA         NA outstandR_gcomp_stan_lrr <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_gcomp_stan(               formula = lin_form,               family = binomial(link = \"logit\")),             scale = \"log_relative_risk\") outstandR_gcomp_stan_lrr #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_relative_risk  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.456    0.0848      -1.03      0.115 #> 2 AC           -1.14     0.0485      -1.57     -0.710 #> 3 BC           -0.686    0.0364      -1.06     -0.312 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A             0.225   0.00199 NA         NA         #> 2 C             0.693   0.00340 NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"multiple-imputation-marginalisation","dir":"Articles","previous_headings":"Model fitting in R","what":"Multiple imputation marginalisation","title":"Binary data example","text":"Marginalized treatment effect aggregate level data study obtained integrating covariate distribution BCBC study Δmarg=𝔼X∼fBC(X)[μT=1(X)−μT=0(X)]=∫[μT=1(X)−μT=0(X)]fBC(X)dX \\Delta^{\\text{marg}} = \\mathbb{E}_{X \\sim f_{\\text{BC}}(X)} \\left[ \\mu_{T=1}(X) - \\mu_{T=0}(X) \\right] = \\int \\left[ \\mu_{T=1}(X) - \\mu_{T=0}(X) \\right] f_{\\text{BC}}(X) \\; \\text{d}X aggregate level data likelihood Δ̂BC∼𝒩(Δmarg,SE2) \\hat{\\Delta}_{BC} \\sim \\mathcal{N}(\\Delta^{\\text{marg}}, SE^2) Change outcome scale .","code":"outstandR_mim <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_mim(               formula = lin_form,               family = binomial(link = \"logit\")))  outstandR_mim outstandR_mim #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_odds  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.987    0.231       -1.93    -0.0452 #> 2 AC           -2.09     0.132       -2.80    -1.37   #> 3 BC           -1.10     0.0992      -1.72    -0.481  #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>      <lgl>    <lgl>     <lgl>      <lgl>      #> 1 A          NA       NA        NA         NA         #> 2 C          NA       NA        NA         NA outstandR_mim_lrr <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_mim(               formula = lin_form,               family = binomial(link = \"logit\")),             scale = \"log_relative_risk\") outstandR_mim_lrr #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_relative_risk  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.456    0.0744     -0.991     0.0783 #> 2 AC           -1.14     0.0380     -1.52     -0.760  #> 3 BC           -0.686    0.0364     -1.06     -0.312  #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>      <lgl>    <lgl>     <lgl>      <lgl>      #> 1 A          NA       NA        NA         NA         #> 2 C          NA       NA        NA         NA"},{"path":[]},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"ac-effect-in-bc-population","dir":"Articles","previous_headings":"Model fitting in R > Model comparison","what":"ACAC effect in BCBC population","title":"Binary data example","text":"true ACAC effect log scale BCBC (aggregate trial data) population βtAC+βEM(X‾1AC+X‾2AC)\\beta_t^{AC} + \\beta_{EM} (\\bar{X}^{AC}_1 + \\bar{X}_2^{AC}). Calculated naive approach just convert directly one population another, ignoring imbalance effect modifiers.","code":"d_AC_true <- b_trt + b_EM * (ald_trial$mean.X1 + ald_trial$mean.X2) d_AC_naive <-    ipd_trial |>    group_by(trt) |>    summarise(y_sum = sum(y), y_bar = mean(y), n = n()) |>    tidyr::pivot_wider(names_from = trt,                      values_from = c(y_sum, y_bar, n)) |>    mutate(d_AC =            log(y_bar_A/(1-y_bar_A)) - log(y_bar_C/(1-y_bar_C)),          var_AC =            1/(n_A-y_sum_A) + 1/y_sum_A + 1/(n_C-y_sum_C) + 1/y_sum_C)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"ab-effect-in-bc-population","dir":"Articles","previous_headings":"Model fitting in R > Model comparison","what":"ABAB effect in BCBC population","title":"Binary data example","text":"indirect effect. true ABAB effect BCBC population βtAC−βtBC\\beta_t^{AC} - \\beta_t^{BC}. Following simulation study Remiro et al (2020) cancel true effect zero. naive comparison calculating ABAB effect BCBC population course, BCBC contrast calculated directly.","code":"d_BC <-   with(ald_trial, log(y.B.bar/(1-y.B.bar)) - log(y.C.bar/(1-y.C.bar)))  d_AB_naive <- d_AC_naive$d_AC - d_BC  var.d.BC <- with(ald_trial, 1/y.B.sum + 1/(N.B - y.B.sum) + 1/y.C.sum + 1/(N.C - y.C.sum))  var.d.AB.naive <- d_AC_naive$var_AC + var.d.BC"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"Binary data example","text":"now combine outputs present plots tables. log-odds ratio table contrasts methods BCBC population given . can see different corresponds reasonably well one another. Next, let us look results log relative risk scale. First, true values calculated summary table ","code":"d_AB_true_lrr <- 0 d_AC_true_lrr <- log(plogis(d_A_true) / plogis(d_C_true)) d_AC_true_lrr"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_example.html","id":"plots","dir":"Articles","previous_headings":"Results","what":"Plots","title":"Binary data example","text":"output can presented forest plots follows. horizontal bar represent different method facets group treatment comparison BCBC population. log-odds ratio log risk ratio plot given .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_Remiro-Azocar.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Binary data example using data from Remiro-Azocar et al. (2020)","text":"simpler version Binary Data Example Simulated Data example. See document details exposition.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_Remiro-Azocar.html","id":"general-problem","dir":"Articles","previous_headings":"","what":"General problem","title":"Binary data example using data from Remiro-Azocar et al. (2020)","text":"Consider one AB trial, company IPD, one AC trial, published aggregate data available. wish estimate comparison effects treatments B C appropriate scale target population P, denoted parameter dBC(P)d_{BC(P)}. make use bracketed subscripts denote specific population. Within AB population parameters μA(AB)\\mu_{( AB)}, μB(AB)\\mu_{B(AB)} μC(AB)\\mu_{C(AB)} representing expected outcome treatment (including parameters treatments studied AB trial, e.g. treatment C). AB trial provides estimators Y‾(AB)\\bar{Y}_{(AB)} Y‾B(AB)\\bar{Y}_{B(AB)} μA(AB)\\mu_{( AB)}, μB(AB)\\mu_{B(AB)}, respectively, summary outcomes. situation AC trial. suitable scale, example logit, risk difference, form estimators ΔAB(AB)\\Delta_{AB(AB)} ΔAC(AC)\\Delta_{AC(AC)} trial level (marginal) relative treatment effects. ΔAB(AB)=g(Y‾B(AB))−g(Y‾(AB)) \\Delta_{AB(AB)} = g(\\bar{Y}_{B{(AB)}}) - g(\\bar{Y}_{{(AB)}})","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_Remiro-Azocar.html","id":"example-analysis","dir":"Articles","previous_headings":"","what":"Example analysis","title":"Binary data example using data from Remiro-Azocar et al. (2020)","text":"First, let us load necessary packages.","code":"library(boot)      # non-parametric bootstrap in MAIC and ML G-computation library(copula)    # simulating BC covariates from Gaussian copula library(rstanarm)  # fit outcome regression, draw outcomes in Bayesian G-computation library(outstandR)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_Remiro-Azocar.html","id":"data","dir":"Articles","previous_headings":"Example analysis","what":"Data","title":"Binary data example using data from Remiro-Azocar et al. (2020)","text":"Next, load data use analysis. data comes simulation study Remiro‐Azócar , Heath , Baio G (2020). consider binary outcomes using log-odds ratio measure effect. binary outcome may response treatment occurrence adverse event. trials AC BC, outcome yny_n subject nn simulated Bernoulli distribution probabilities success generated logistic regression. BC trial, individual-level covariates outcomes aggregated obtain summaries. continuous covariates summarized means standard deviations, available analyst published study table baseline characteristics RCT publication. binary outcomes summarized overall event table. Typically, published study provides aggregate information analyst. general format data sets consist following.","code":"set.seed(555)  ipd_trial <- read.csv(here::here(\"raw-data\", \"AC_IPD.csv\"))  # AC patient-level data ald_trial <- read.csv(here::here(\"raw-data\", \"BC_ALD.csv\"))  # BC aggregate-level data"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_Remiro-Azocar.html","id":"ipd_trial-individual-patient-data","dir":"Articles","previous_headings":"Example analysis > Data","what":"ipd_trial: Individual patient data","title":"Binary data example using data from Remiro-Azocar et al. (2020)","text":"X*: patient measurements trt: treatment ID (integer) y: (logical) indicator whether event observed","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_Remiro-Azocar.html","id":"ald_trial-aggregate-level-data","dir":"Articles","previous_headings":"Example analysis > Data","what":"ald_trial: Aggregate-level data","title":"Binary data example using data from Remiro-Azocar et al. (2020)","text":"mean.X*: mean patient measurement sd.X*: standard deviation patient measurement y.*.sum: total number events y.*.bar: proportion events N.*: total number individuals Note wildcard * usually integer 1 trial identifier B, C. Let us label treatment levels data look like following. 4 correlated continuous covariates generated per subject, simulated multivariate normal distribution. case, 4 covariate mean standard deviation values; event total, average sample size treatment B, C.","code":"ipd_trial$trt <- factor(ipd_trial$trt, labels = c(\"C\", \"A\")) head(ipd_trial) #>            X1        X2          X3          X4 trt y #> 1  0.43734111 0.6747901  0.93001035  0.09165363   A 0 #> 2  0.05643081 0.5987971  0.03557646  0.59954129   A 1 #> 3 -0.08048882 0.6843784  0.93147222 -0.11419716   A 0 #> 4 -0.38580926 0.5716644 -0.32252212  0.02551808   A 0 #> 5  1.00755116 0.8220826  0.92735892  0.84414221   A 1 #> 6  0.19443956 0.2031329  0.34990179  0.15633009   A 0 ald_trial #>     mean.X1   mean.X2   mean.X3   mean.X4     sd.X1     sd.X2     sd.X3 #> 1 0.5908996 0.6414179 0.5856529 0.6023671 0.3863145 0.4033615 0.4076097 #>      sd.X4 y.B.sum y.B.bar N.B y.C.sum y.C.bar N.C #> 1 0.395132     182   0.455 400     149   0.745 200"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_Remiro-Azocar.html","id":"model-fitting-in-r","dir":"Articles","previous_headings":"","what":"Model fitting in R","title":"Binary data example using data from Remiro-Azocar et al. (2020)","text":"outstandR package written easy use essential consists single function, outstandR(). can used run different types model, call strategies. first two arguments outstandR() individual aggregate-level data, respectively. strategy argument outstandR takes functions called strategy_*(), wildcard * replaced name particular method required, e.g. strategy_maic() MAIC. specific example provided .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_Remiro-Azocar.html","id":"maic","dir":"Articles","previous_headings":"Model fitting in R","what":"MAIC","title":"Binary data example using data from Remiro-Azocar et al. (2020)","text":"Using individual level data AC firstly perform non-parametric bootstrap maic.boot function R = 1000 replicates. function fits treatment coefficient marginal effect vs C. returned value object class boot {boot} package. calculate bootstrap mean variance wrapper function maic_boot_stats. formula used model covariates prognostic variable y=X1+X2+X3+X4+(βt+βxX1+βxX2)t y = X_1 + X_2 + X_3 + X_4 + (\\beta_t + \\beta_x X_1 + \\beta_x X_2) t corresponds following R formula object passed argument strategy function. returned object class outstandR.","code":"lin_form <- as.formula(\"y ~ X3 + X4 + trt*X1 + trt*X2\") outstandR_maic <- outstandR(ipd_trial, ald_trial,                             strategy = strategy_maic(formula = lin_form,                                                      family = binomial(link = \"logit\"))) outstandR_maic #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_odds  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB            0.101    0.173      -0.715      0.917 #> 2 AC           -1.15     0.137      -1.88      -0.427 #> 3 BC           -1.25     0.0364     -1.63      -0.879 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A             0.434   0.00255 NA         NA         #> 2 C             0.704   0.00329 NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_Remiro-Azocar.html","id":"stc","dir":"Articles","previous_headings":"Model fitting in R","what":"STC","title":"Binary data example using data from Remiro-Azocar et al. (2020)","text":"STC conventional outcome regression method. involves fitting regression model outcome treatment covariates IPD plugging-covariate mean values. last two approaches, perform G-computation firstly frequentist MLE approach Bayesian approach.","code":"outstandR_stc <- outstandR(ipd_trial, ald_trial,                            strategy = strategy_stc(formula = lin_form,                                                    family = binomial(link = \"logit\"))) outstandR_stc #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_odds  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.176   NA           NA        NA     #> 2 AC           -1.43    NA           NA        NA     #> 3 BC           -1.25     0.0364      -1.63     -0.879 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A             0.117        NA NA         NA         #> 2 C             0.356        NA NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_Remiro-Azocar.html","id":"parametric-g-computation-with-maximum-likelihood-estimation","dir":"Articles","previous_headings":"Model fitting in R","what":"Parametric G-computation with maximum-likelihood estimation","title":"Binary data example using data from Remiro-Azocar et al. (2020)","text":"G-computation marginalizes conditional estimates separating regression modelling estimation marginal treatment effect versus C.","code":"outstandR_gcomp_ml <- outstandR(ipd_trial, ald_trial,                                 strategy = strategy_gcomp_ml(formula = lin_form,                                                              family = binomial(link = \"logit\"))) outstandR_gcomp_ml #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_odds  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB            0.164    0.147      -0.586      0.915 #> 2 AC           -1.09     0.110      -1.74      -0.438 #> 3 BC           -1.25     0.0364     -1.63      -0.879 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A             0.485   0.00235 NA         NA         #> 2 C             0.734   0.00251 NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_Remiro-Azocar.html","id":"bayesian-g-computation-with-mcmc","dir":"Articles","previous_headings":"Model fitting in R","what":"Bayesian G-computation with MCMC","title":"Binary data example using data from Remiro-Azocar et al. (2020)","text":"difference Bayesian G-computation maximum-likelihood counterpart estimated distribution predicted outcomes. Bayesian approach also marginalizes, integrates standardizes joint posterior distribution conditional nuisance parameters outcome regression, well joint covariate distribution.","code":"outstandR_gcomp_stan <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_gcomp_stan(formula = lin_form,                                            family = binomial(link = \"logit\"))) #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 7.4e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.74 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.285 seconds (Warm-up) #> Chain 1:                0.327 seconds (Sampling) #> Chain 1:                0.612 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 1.6e-05 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.16 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.301 seconds (Warm-up) #> Chain 2:                0.385 seconds (Sampling) #> Chain 2:                0.686 seconds (Total) #> Chain 2:  #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 3). #> Chain 3:  #> Chain 3: Gradient evaluation took 4.4e-05 seconds #> Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.44 seconds. #> Chain 3: Adjust your expectations accordingly! #> Chain 3:  #> Chain 3:  #> Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 3:  #> Chain 3:  Elapsed Time: 0.32 seconds (Warm-up) #> Chain 3:                0.328 seconds (Sampling) #> Chain 3:                0.648 seconds (Total) #> Chain 3:  #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 4). #> Chain 4:  #> Chain 4: Gradient evaluation took 1.9e-05 seconds #> Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.19 seconds. #> Chain 4: Adjust your expectations accordingly! #> Chain 4:  #> Chain 4:  #> Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 4:  #> Chain 4:  Elapsed Time: 0.298 seconds (Warm-up) #> Chain 4:                0.262 seconds (Sampling) #> Chain 4:                0.56 seconds (Total) #> Chain 4: outstandR_gcomp_stan #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_odds  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB            0.151    0.141      -0.585      0.887 #> 2 AC           -1.10     0.105      -1.74      -0.467 #> 3 BC           -1.25     0.0364     -1.63      -0.879 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A             0.485   0.00218 NA         NA         #> 2 C             0.736   0.00258 NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_Remiro-Azocar.html","id":"multiple-imputation-marginalisation","dir":"Articles","previous_headings":"Model fitting in R","what":"Multiple imputation marginalisation","title":"Binary data example using data from Remiro-Azocar et al. (2020)","text":"Fit model .","code":"outstandR_mim <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_mim(formula = lin_form,                                     family = binomial(link = \"logit\"))) #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 2.2e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.22 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.309 seconds (Warm-up) #> Chain 1:                0.336 seconds (Sampling) #> Chain 1:                0.645 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 1.9e-05 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.19 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.309 seconds (Warm-up) #> Chain 2:                0.335 seconds (Sampling) #> Chain 2:                0.644 seconds (Total) #> Chain 2:  #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 3). #> Chain 3:  #> Chain 3: Gradient evaluation took 2.2e-05 seconds #> Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.22 seconds. #> Chain 3: Adjust your expectations accordingly! #> Chain 3:  #> Chain 3:  #> Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 3:  #> Chain 3:  Elapsed Time: 0.323 seconds (Warm-up) #> Chain 3:                0.322 seconds (Sampling) #> Chain 3:                0.645 seconds (Total) #> Chain 3:  #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 4). #> Chain 4:  #> Chain 4: Gradient evaluation took 1.8e-05 seconds #> Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.18 seconds. #> Chain 4: Adjust your expectations accordingly! #> Chain 4:  #> Chain 4:  #> Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 4:  #> Chain 4:  Elapsed Time: 0.322 seconds (Warm-up) #> Chain 4:                0.279 seconds (Sampling) #> Chain 4:                0.601 seconds (Total) #> Chain 4: outstandR_mim #> Object of class 'outstandR'  #> Model: binomial  #> Scale: log_odds  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB            0.153    0.131      -0.556      0.861 #> 2 AC           -1.10     0.0942     -1.70      -0.499 #> 3 BC           -1.25     0.0364     -1.63      -0.879 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>      <lgl>    <lgl>     <lgl>      <lgl>      #> 1 A          NA       NA        NA         NA         #> 2 C          NA       NA        NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Binary_data_Remiro-Azocar.html","id":"model-comparison","dir":"Articles","previous_headings":"Model fitting in R","what":"Model comparison","title":"Binary data example using data from Remiro-Azocar et al. (2020)","text":"Combine outputs log-odds ratio table contrasts methods.","code":"knitr::kable(   data.frame(   `MAIC` = unlist(outstandR_maic$contrasts),   `STC` = unlist(outstandR_stc$contrasts),   `Gcomp ML` = unlist(outstandR_gcomp_ml$contrasts),   `Gcomp Bayes` = unlist(outstandR_gcomp_stan$contrasts),   `MIM` = unlist(outstandR_mim$contrasts)) )"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/comparison-with-other-packages.html","id":"marginaleffects","dir":"Articles","previous_headings":"","what":"marginaleffects","title":"Comparison with other packages","text":"marginaleffects package functions calculate G-computation estimates.","code":"##TODO: see unit tests library(marginaleffects)  # marginaleffects::avg_predictions() # marginaleffects::avg_comparisons()"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/comparison-with-other-packages.html","id":"stdreg2","dir":"Articles","previous_headings":"","what":"stdReg[2]","title":"Comparison with other packages","text":"package {stdReg} rewritten produce stdReg2 “nicer output, available methods, possibility include new methods, mainly make maintenance updating easier.” , reason, use stdReg2. shall follow article Estimation causal effects using stdReg2. continuous outcomes (change weight) includes transformed covariates. Note regression transformed covariates using () function. Two outcome scales calculated, risk difference risk ratio. data also contains categorical variable 2 levels, education, smokeintensity, exercise active. simply, can drop variables 2 levels run outstandR(). Alternatively, rather dropping factors, can create dummy variables replace using maicplus::dummize_ipd(). 2024 ISPOR poster Hatswell presents comparison different MAIC R packages. shall use starting point. packages considered, {MAIC} CRAN included analysis moment.","code":"library(stdReg2) library(causaldata)  # contains data set  # load data set nhefs_dat <- causaldata::nhefs_complete  m <- glm(wt82_71 ~ qsmk + sex + race + age + I(age^2) + as.factor(education) + smokeintensity + I(smokeintensity^2) +            smokeyrs + I(smokeyrs^2) + as.factor(exercise) + as.factor(active) + wt71 + I(wt71^2),           data = nhefs_dat) summary(m) #>  #> Call: #> glm(formula = wt82_71 ~ qsmk + sex + race + age + I(age^2) +  #>     as.factor(education) + smokeintensity + I(smokeintensity^2) +  #>     smokeyrs + I(smokeyrs^2) + as.factor(exercise) + as.factor(active) +  #>     wt71 + I(wt71^2), data = nhefs_dat) #>  #> Coefficients: #>                         Estimate Std. Error t value Pr(>|t|)     #> (Intercept)           -1.6586176  4.3137734  -0.384 0.700666     #> qsmk                   3.4626218  0.4384543   7.897 5.36e-15 *** #> sex1                  -1.4650496  0.4683410  -3.128 0.001792 **  #> race1                  0.5864117  0.5816949   1.008 0.313560     #> age                    0.3626624  0.1633431   2.220 0.026546 *   #> I(age^2)              -0.0061377  0.0017263  -3.555 0.000389 *** #> as.factor(education)2  0.8185263  0.6067815   1.349 0.177546     #> as.factor(education)3  0.5715004  0.5561211   1.028 0.304273     #> as.factor(education)4  1.5085173  0.8323778   1.812 0.070134 .   #> as.factor(education)5 -0.1708264  0.7413289  -0.230 0.817786     #> smokeintensity         0.0651533  0.0503115   1.295 0.195514     #> I(smokeintensity^2)   -0.0010468  0.0009373  -1.117 0.264261     #> smokeyrs               0.1333931  0.0917319   1.454 0.146104     #> I(smokeyrs^2)         -0.0018270  0.0015438  -1.183 0.236818     #> as.factor(exercise)1   0.3206824  0.5349616   0.599 0.548961     #> as.factor(exercise)2   0.3628786  0.5589557   0.649 0.516300     #> as.factor(active)1    -0.9429574  0.4100208  -2.300 0.021593 *   #> as.factor(active)2    -0.2580374  0.6847219  -0.377 0.706337     #> wt71                   0.0373642  0.0831658   0.449 0.653297     #> I(wt71^2)             -0.0009158  0.0005235  -1.749 0.080426 .   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for gaussian family taken to be 53.59474) #>  #>     Null deviance: 97176  on 1565  degrees of freedom #> Residual deviance: 82857  on 1546  degrees of freedom #> AIC: 10701 #>  #> Number of Fisher Scoring iterations: 2  res_stdReg2 <- standardize_glm(   wt82_71 ~ qsmk + sex + race + age + I(age^2) + as.factor(education) + smokeintensity + I(smokeintensity^2) +     smokeyrs + I(smokeyrs^2) + as.factor(exercise) + as.factor(active) + wt71 + I(wt71^2),   data = nhefs_dat,    values = list(qsmk = c(0,1)),   contrasts = c(\"difference\", \"ratio\"),   reference = 0)  res_stdReg2 #> Outcome formula: wt82_71 ~ qsmk + sex + race + age + I(age^2) + as.factor(education) +  #>     smokeintensity + I(smokeintensity^2) + smokeyrs + I(smokeyrs^2) +  #>     as.factor(exercise) + as.factor(active) + wt71 + I(wt71^2) #> Outcome family: gaussian  #> Outcome link function: identity  #> Exposure:  qsmk  #>  #> Tables:  #>   qsmk Estimate Std.Error lower.0.95 upper.0.95 #> 1    0     1.75     0.217       1.32       2.17 #> 2    1     5.21     0.420       4.39       6.03 #>  #> Reference level:  qsmk = 0  #> Contrast:  difference  #>   qsmk Estimate Std.Error lower.0.95 upper.0.95 #> 1    0     0.00     0.000       0.00       0.00 #> 2    1     3.46     0.466       2.55       4.38 #>  #> Reference level:  qsmk = 0  #> Contrast:  ratio  #>   qsmk Estimate Std.Error lower.0.95 upper.0.95 #> 1    0     1.00     0.000       1.00       1.00 #> 2    1     2.98     0.435       2.13       3.83 library(dplyr)  nhefs_ipd <- nhefs_dat |>    # drop categorical variables   dplyr::select(qsmk, sex, race, age, smokeintensity, smokeyrs, wt71, wt82_71) |>   dplyr::rename(trt = qsmk,                 y = wt82_71) |>    dplyr::mutate(sex = as.numeric(sex) - 1,                 race = as.numeric(race) - 1,                 trt = factor(trt, labels = c(\"C\", \"A\")))  # create aggregate data  nhefs.X <- nhefs_ipd %>%   summarise(across(-c(trt, y),                    list(mean = mean, sd = sd),                    .names = \"{fn}.{col}\"))  nhefs.B <- nhefs_ipd |>    dplyr::filter(trt == 1) |>    summarise(y.B.sum = sum(y),             y.B.bar = mean(y),             y.B.sd = sd(y),             N.B = n())  nhefs.C <- nhefs_ipd |>    dplyr::filter(trt == 0) |>    summarise(y.C.sum = sum(y),             y.C.bar = mean(y),             y.C.sd = sd(y),             N.C = n())  nhefs_ald <- cbind.data.frame(nhefs.X, nhefs.C, nhefs.B)  # simplified formula lin_form <-   as.formula(y ~ trt * (sex + race + age + I(age^2) +                           smokeintensity + I(smokeintensity^2) +                           smokeyrs + I(smokeyrs^2) + wt71 + I(wt71^2))) nhefs_strat <-    strategy_gcomp_ml(formula = lin_form,                     family = gaussian(link = \"identity\"))  res <- outstandR(ald_trial = nhefs_ald,                  ipd_trial = nhefs_ipd,                  strategy = nhefs_strat,                  scale = \"log_relative_risk\") res #> Object of class 'outstandR'  #> Model: gaussian  #> Scale: log_relative_risk  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           NaN     NaN         NaN         NaN    #> 2 AC             1.07    0.0198      0.790       1.34 #> 3 BC           NaN     NaN         NaN         NaN    #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A              5.26    0.192  NA         NA         #> 2 C              1.82    0.0392 NA         NA nhefs_ipd <- nhefs_dat |>    dplyr::select(qsmk, sex, race, age, smokeintensity, smokeyrs, wt71,                 wt82_71, education, exercise, active) |>    dplyr::rename(trt = qsmk,                 y = wt82_71) |>    dplyr::mutate(sex = as.numeric(sex) - 1,       # binary                 race = as.numeric(race) - 1) |>    maicplus::dummize_ipd(dummize_cols = c(\"education\", \"exercise\", \"active\"),                         dummize_ref_level = c(\"1\",\"0\",\"0\")) |>    dplyr::select(-education, -exercise, -active) |>   # remove originals   dplyr::mutate(trt = factor(trt, labels = c(\"C\", \"A\")))    # # replace with this? # model.matrix()  # create aggregate data  nhefs.X <- nhefs_ipd %>%   summarise(across(-c(trt, y),                    list(mean = mean, sd = sd),                    .names = \"{fn}.{col}\"))  nhefs.B <- dplyr::filter(nhefs_ipd, trt == 1) |>    summarise(y.B.sum = sum(y),             y.B.bar = mean(y),             y.B.sd = sd(y),             N.B = n())  nhefs.C <- dplyr::filter(nhefs_ipd, trt == 0) |>    summarise(y.C.sum = sum(y),             y.C.bar = mean(y),             y.C.sd = sd(y),             N.C = n())  nhefs_ald <- cbind.data.frame(nhefs.X, nhefs.C, nhefs.B)  lin_form <-   as.formula(y ~ trt * (sex + race + age + I(age^2) +                           smokeintensity + I(smokeintensity^2) +                           EDUCATION_2 + EDUCATION_3 + EDUCATION_4 + EDUCATION_5 +                           EXERCISE_1 + EXERCISE_2 + ACTIVE_1 + ACTIVE_2 +                           smokeyrs + I(smokeyrs^2) + wt71 + I(wt71^2))) nhefs_strat <-    strategy_gcomp_ml(formula = lin_form,                     family = gaussian(link = \"identity\"))  res <- outstandR(ald_trial = nhefs_ald,                  ipd_trial = nhefs_ipd,                  strategy = nhefs_strat,                  scale = \"risk_difference\") res #> Object of class 'outstandR'  #> Model: gaussian  #> Scale: risk_difference  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           NaN       NA          NA         NA    #> 2 AC             3.59     0.235       2.64       4.54 #> 3 BC           NaN       NA          NA         NA    #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A              5.27    0.192  NA         NA         #> 2 C              1.68    0.0437 NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/comparison-with-other-packages.html","id":"maicplus","dir":"Articles","previous_headings":"","what":"maicplus","title":"Comparison with other packages","text":"Roche developed maic package now deprecated replaced maicplus. follow article titled Anchored Binary Analysis part package make comparison. Now ’ve prepared input data ’re ready run model.","code":"library(maicplus)  # Load required data data(centered_ipd_twt) data(adrs_twt)  # response IPD data(adsl_sat)  # covariates IPD  # Load required package library(dplyr)  # Prepare matching variables (only using means, ignoring SDs) adsl_sat <- adsl_sat |>    mutate(     SEX_MALE = as.integer(SEX == \"Male\"),     AGE_SQUARED = AGE^2   )  # Define variable names for matching (excluding SDs) adsl_colnames <- c(\"AGE\", \"AGE_SQUARED\", \"SEX_MALE\", \"ECOG0\", \"SMOKE\", \"N_PR_THER_MEDIAN\") centered_colnames <- paste0(adsl_colnames, \"_CENTERED\")  # Estimate weights based only on means weighted_data <- estimate_weights(   data = centered_ipd_twt,   centered_colnames = centered_colnames )  # Aggregate summary data for AGD (ONLY MEANS, NO SDs) agd <- data.frame(   AGE_MEAN = 51,   SEX_MALE_PROP = 147 / 300,   ECOG0_PROP = 0.40,   SMOKE_PROP = 58 / (300 - 5),   N_PR_THER_MEDIAN = 2 )  # Binary AGD summary data binary_agd <- data.frame(   ARM = rep(c(\"B\", \"C\"), each = 2),   RESPONSE = rep(c(\"YES\", \"NO\"), 2),   COUNT = c(280, 200, 120, 200) )  # Generate pseudo-IPD from binary AGD pseudo_adrs <- get_pseudo_ipd_binary(   binary_agd = binary_agd,   format = \"stacked\" )  # Perform MAIC analysis (matching only on means) res_maicplus <- maic_anchored(   weights_object = weighted_data,   ipd = adrs_twt,   pseudo_ipd = pseudo_adrs,   trt_ipd = \"A\",   trt_agd = \"B\",   trt_common = \"C\",   normalize_weight = FALSE,   endpoint_type = \"binary\",   endpoint_name = \"Binary Endpoint\",   eff_measure = \"OR\",   binary_robust_cov_type = \"HC3\" )   res_maicplus #> $descriptive #> $descriptive$summary #>   trt_ind treatment                 type        n   events events_pct #> 1       C         C IPD, before matching 500.0000 338.0000   67.60000 #> 2       A         A IPD, before matching 500.0000 390.0000   78.00000 #> 3       C         C  IPD, after matching 199.4265 134.0364   67.21094 #> 4       A         A  IPD, after matching 199.4265 142.8968   71.65386 #> 5       C         C        AgD, external 320.0000 120.0000   37.50000 #> 6       B         B        AgD, external 480.0000 280.0000   58.33333 #>  #>  #> $inferential #> $inferential$fit #> $inferential$fit$model_before_ipd #>  #> Call:  glm(formula = RESPONSE ~ ARM, family = binomial(link = glm_link),  #>     data = ipd) #>  #> Coefficients: #> (Intercept)         ARMA   #>      0.7354       0.5302   #>  #> Degrees of Freedom: 999 Total (i.e. Null);  998 Residual #> Null Deviance:       1170  #> Residual Deviance: 1157  AIC: 1161 #>  #> $inferential$fit$model_after_ipd #>  #> Call:  glm(formula = RESPONSE ~ ARM, family = binomial(link = glm_link),  #>     data = ipd, weights = weights) #>  #> Coefficients: #> (Intercept)         ARMA   #>      0.7177       0.2096   #>  #> Degrees of Freedom: 999 Total (i.e. Null);  998 Residual #> Null Deviance:       491.1  #> Residual Deviance: 490.1     AIC: 458.4 #>  #> $inferential$fit$model_agd #>  #> Call:  glm(formula = RESPONSE ~ ARM, family = binomial(link = glm_link),  #>     data = pseudo_ipd) #>  #> Coefficients: #> (Intercept)         ARMB   #>     -0.5108       0.8473   #>  #> Degrees of Freedom: 799 Total (i.e. Null);  798 Residual #> Null Deviance:       1109  #> Residual Deviance: 1075  AIC: 1079 #>  #> $inferential$fit$res_AC #> $inferential$fit$res_AC$est #> [1] 1.233204 #>  #> $inferential$fit$res_AC$se #> [1] 0.3085377 #>  #> $inferential$fit$res_AC$ci_l #> [1] 0.7710134 #>  #> $inferential$fit$res_AC$ci_u #> [1] 1.972458 #>  #> $inferential$fit$res_AC$pval #> [1] 0.3817109 #>  #>  #> $inferential$fit$res_AC_unadj #> $inferential$fit$res_AC_unadj$est #> [1] 1.699301 #>  #> $inferential$fit$res_AC_unadj$se #> [1] 0.2488482 #>  #> $inferential$fit$res_AC_unadj$ci_l #> [1] 1.280998 #>  #> $inferential$fit$res_AC_unadj$ci_u #> [1] 2.254199 #>  #> $inferential$fit$res_AC_unadj$pval #> [1] 0.0002354448 #>  #>  #> $inferential$fit$res_BC #> $inferential$fit$res_BC$est #> [1] 2.333333 #>  #> $inferential$fit$res_BC$se #> [1] 0.3510631 #>  #> $inferential$fit$res_BC$ci_l #> [1] 1.745809 #>  #> $inferential$fit$res_BC$ci_u #> [1] 3.118579 #>  #> $inferential$fit$res_BC$pval #> [1] 1.035032e-08 #>  #>  #> $inferential$fit$res_AB #>             result             pvalue  #> \"0.53[0.30; 0.92]\"            \"0.024\"  #>  #> $inferential$fit$res_AB_unadj #>             result             pvalue  #> \"0.73[0.49; 1.09]\"            \"0.125\"  #>  #> $inferential$fit$boot_res #> NULL #>  #> $inferential$fit$boot_res_AC #> NULL #>  #> $inferential$fit$boot_res_AB_mc #> NULL #>  #> $inferential$fit$boot_res_AB #> NULL #>  #>  #> $inferential$summary #>          case        OR       LCL       UCL         pval #> 1          AC 1.6993007 1.2809976 2.2541985 2.354448e-04 #> 2 adjusted_AC 1.2332036 0.7710134 1.9724576 3.817109e-01 #> 3          BC 2.3333333 1.7458092 3.1185794 1.035032e-08 #> 4          AB 0.7282717 0.4857575 1.0918611 1.248769e-01 #> 5 adjusted_AB 0.5285158 0.3043103 0.9179084 2.356848e-02 library(dplyr, verbose = FALSE, quietly = TRUE) library(glue, verbose = FALSE, quietly = TRUE)  ##TODO: why has this got median in name here? adsl_colnames[adsl_colnames == \"N_PR_THER_MEDIAN\"] <- \"N_PR_THER\"  lin_form <- as.formula(glue(\"y ~ trt * ({paste(adsl_colnames, collapse = ' + ')})\"))  ipd_trial <- adsl_twt |>   merge(adrs_twt) |>    rename(trt = ARM,          y = RESPONSE) |>    mutate(AGE_SQUARED = AGE^2)  # sd from IPD agd_sd <- ipd_trial |>    summarise(across(c(AGE, AGE_SQUARED, SMOKE, ECOG0, N_PR_THER, SEX_MALE),                    .fns = sd, .names = \"sd.{.col}\"))  # transform names to format needed in outstandR # mean.* and y.* # note that we're nto going to use sd in matching ald_trial <- agd |>    rename(mean.AGE = AGE_MEAN,          # sd.AGE = AGE_SD,          mean.SEX_MALE = SEX_MALE_PROP,          mean.ECOG0 = ECOG0_PROP,          mean.SMOKE = SMOKE_PROP,          mean.N_PR_THER = N_PR_THER_MEDIAN) |>    mutate(     # mean.AGE_SQUARED = sd.AGE^2 + mean.AGE^2,     # mean.AGE_SQUARED = mean.AGE^2,                 ##TODO: this is a fudge     # sd.SEX_MALE = sqrt(mean.SEX_MALE * (1 - mean.SEX_MALE)),      # sd.ECOG0 = sqrt(mean.ECOG0 * (1 - mean.ECOG0)),      # sd.SMOKE = sqrt(mean.SMOKE * (1 - mean.SMOKE)),      # outcomes     N.B = 480,      y.B.sum = binary_agd[binary_agd$ARM == \"B\" & binary_agd$RESPONSE == \"YES\", \"COUNT\"],     y.B.bar = y.B.sum/N.B,     N.C = 320,      y.C.sum = binary_agd[binary_agd$ARM == \"C\" & binary_agd$RESPONSE == \"YES\", \"COUNT\"],     y.C.bar = y.C.sum/N.C) |>      cbind(agd_sd) |>    relocate(N.B, y.B.sum, y.B.bar, N.C, y.C.sum, y.C.bar, .after = sd.SEX_MALE)  ald_trial #>   mean.AGE mean.SEX_MALE mean.ECOG0 mean.SMOKE mean.N_PR_THER   sd.AGE #> 1       51          0.49        0.4  0.1966102              2 9.006409 #>   sd.AGE_SQUARED  sd.SMOKE  sd.ECOG0 sd.N_PR_THER sd.SEX_MALE N.B y.B.sum #> 1       1085.096 0.4667096 0.4913302     1.100505   0.4866013 480     280 #>     y.B.bar N.C y.C.sum y.C.bar #> 1 0.5833333 320     120   0.375 ##TODO: fix bug of large value in optim() outstandR_maic <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_maic(formula = lin_form,                                      family = binomial(link = \"logit\")))"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/comparison-with-other-packages.html","id":"maicchecks","dir":"Articles","previous_headings":"","what":"maicChecks","title":"Comparison with other packages","text":"now follow examples package maicChecks. G-formula compare output packages gFormulaMI gfoRmula.","code":"##TODO: library(maicChecks)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/comparison-with-other-packages.html","id":"gformula","dir":"Articles","previous_headings":"","what":"gfoRmula","title":"Comparison with other packages","text":"","code":"##TODO: library(gfoRmula)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/comparison-with-other-packages.html","id":"gformulami","dir":"Articles","previous_headings":"","what":"gFormulaMI","title":"Comparison with other packages","text":"","code":"##TODO: library(gFormulaMI)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Continuous_data_example.html","id":"example-analysis","dir":"Articles","previous_headings":"","what":"Example analysis","title":"Continuous data example","text":"First, let us load necessary packages.","code":"library(boot)      # non-parametric bootstrap in MAIC and ML G-computation library(copula)    # simulating BC covariates from Gaussian copula library(rstanarm)  # fit outcome regression, draw outcomes in Bayesian G-computation library(outstandR) library(simcovariates)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Continuous_data_example.html","id":"data","dir":"Articles","previous_headings":"Example analysis","what":"Data","title":"Continuous data example","text":"Next, load data use analysis. data comes simulation study Remiro‐Azócar , Heath , Baio G (2020). consider binary outcomes using log-odds ratio measure effect. binary outcome may response treatment occurrence adverse event. trials AC BC, outcome yny_n subject nn simulated Bernoulli distribution probabilities success generated logistic regression. BC trial, individual-level covariates outcomes aggregated obtain summaries. continuous covariates summarized means standard deviations, available analyst published study table baseline characteristics RCT publication. binary outcomes summarized overall event table. Typically, published study provides aggregate information analyst. Use gen_data() function available simcovariates package. Similarly, aggregate data additional summarise step. general format data sets consist following.","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(MASS) #>  #> Attaching package: 'MASS' #> The following object is masked from 'package:dplyr': #>  #>     select  N <- 200 allocation <- 2/3      # active treatment vs. placebo allocation ratio (2:1) b_trt <- log(0.17)     # conditional effect of active treatment vs. common comparator b_X <- -log(0.5)       # conditional effect of each prognostic variable b_EM <- -log(0.67)     # conditional interaction effect of each effect modifier meanX_AC <- c(0.45, 0.45)       # mean of normally-distributed covariate in AC trial meanX_BC <- c(0.6, 0.6)         # mean of each normally-distributed covariate in BC meanX_EM_AC <- c(0.45, 0.45)    # mean of normally-distributed EM covariate in AC trial meanX_EM_BC <- c(0.6, 0.6)      # mean of each normally-distributed EM covariate in BC sdX <- c(0.4, 0.4)     # standard deviation of each covariate (same for AC and BC) sdX_EM <- c(0.4, 0.4)  # standard deviation of each EM covariate corX <- 0.2            # covariate correlation coefficient   b_0 <- -0.6            # baseline intercept coefficient  ##TODO: fixed value  ipd_trial <- gen_data(N, b_trt, b_X, b_EM, b_0,                       meanX_AC, sdX,                        meanX_EM_AC, sdX_EM,                        corX, allocation,                       family = gaussian(link = \"identity\"))  ipd_trial$trt <- factor(ipd_trial$trt, labels = c(\"C\", \"A\")) BC.IPD <- gen_data(N, b_trt, b_X, b_EM, b_0,                    meanX_BC, sdX,                     meanX_EM_BC, sdX_EM,                     corX, allocation,                    family = gaussian(link = \"identity\"))  cov.X <- BC.IPD %>%   summarise(across(starts_with(\"X\"),                    list(mean = mean, sd = sd),                    .names = \"{fn}.{col}\"))  out.B <- dplyr::filter(BC.IPD, trt == 1) %>%   summarise(y.B.sum = sum(y),             y.B.bar = mean(y),             y.B.sd = sd(y),             N.B = n())  out.C <- dplyr::filter(BC.IPD, trt == 0) %>%   summarise(y.C.sum = sum(y),             y.C.bar = mean(y),             y.C.sd = sd(y),             N.C = n())  ald_trial <- cbind.data.frame(cov.X, out.B, out.C)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Continuous_data_example.html","id":"ipd_trial-individual-patient-data","dir":"Articles","previous_headings":"Example analysis > Data","what":"ipd_trial: Individual patient data","title":"Continuous data example","text":"X*: patient measurements trt: treatment ID (integer) y: continuous outcome measure","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Continuous_data_example.html","id":"ald_trial-aggregate-level-data","dir":"Articles","previous_headings":"Example analysis > Data","what":"ald_trial: Aggregate-level data","title":"Continuous data example","text":"mean.X*: mean patient measurement sd.X*: standard deviation patient measurement mean.y: sd.y: Note wildcard * usually integer 1 trial identifier B, C. data look like following. 4 correlated continuous covariates generated per subject, simulated multivariate normal distribution. case, 4 covariate mean standard deviation values; event total, average sample size treatment B, C.","code":"head(ipd_trial) #>           X1         X2         X3         X4 trt          y #> 1 0.42066874  1.0957407 0.37118099  1.3291540   A  0.8949999 #> 2 0.51227329  0.9079984 0.30560144 -0.1842358   A -1.7550940 #> 3 1.00347612  0.8136847 1.25054503  1.1986315   A -0.6521005 #> 4 0.05641685  0.5318140 0.54799796  0.6694090   A -0.6260983 #> 5 0.42997845  0.5274304 0.09140568  0.1222184   A -1.2882834 #> 6 0.06916082 -0.3125090 0.99150666 -0.1102693   A -3.0170689 ald_trial #>     mean.X1     sd.X1   mean.X2    sd.X2   mean.X3     sd.X3  mean.X4     sd.X4 #> 1 0.6081015 0.3865186 0.6462269 0.412924 0.5903258 0.3842429 0.635176 0.3831984 #>     y.B.sum   y.B.bar   y.B.sd N.B  y.C.sum   y.C.bar   y.C.sd N.C #> 1 -135.0634 -1.015514 1.159787 133 12.38076 0.1847875 1.019683  67"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Continuous_data_example.html","id":"output-statistics","dir":"Articles","previous_headings":"Example analysis","what":"Output statistics","title":"Continuous data example","text":"implement MAIC, STC, G-computation methods obtain marginal variance, defined  marginal treatment effect, defined log-odds ratio,  C‾\\bar{C} compliment CC e.g. nC‾=NC−ncn_{\\bar{C}} = N_C - n_c.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Continuous_data_example.html","id":"model-fitting-in-r","dir":"Articles","previous_headings":"","what":"Model fitting in R","title":"Continuous data example","text":"outstandR package written easy use essential consists single function, outstandR(). can used run different types model, call strategies. first two arguments outstandR() individual aggregate-level data, respectively. strategy argument outstandR takes functions called strategy_*(), wildcard * replaced name particular method required, e.g. strategy_maic() MAIC. specific example provided .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Continuous_data_example.html","id":"maic","dir":"Articles","previous_headings":"Model fitting in R","what":"MAIC","title":"Continuous data example","text":"Using individual level data AC firstly perform non-parametric bootstrap maic.boot function R = 1000 replicates. function fits treatment coefficient marginal effect vs C. returned value object class boot {boot} package. calculate bootstrap mean variance wrapper function maic_boot_stats. formula used model y=X3+X4+βtX1+βtX2 y = X_3 + X_4 + \\beta_t X_1 + \\beta_t X_2 corresponds following R formula object passed argument strategy function. returned object class outstandR. see list object 3 parts, containing statistics pair treatments. mean contrasts, variances confidence intervals (CI), respectively. default CI 95% can altered outstandR CI argument.","code":"lin_form <- as.formula(\"y ~ X3 + X4 + trt*X1 + trt*X2\") outstandR_maic <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_maic(               formula = lin_form,               family = gaussian(link = \"identity\"))) outstandR_maic #> Object of class 'outstandR'  #> Model: gaussian  #> Scale: risk_difference  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.339    0.0533     -0.791      0.113 #> 2 AC           -1.54     0.0276     -1.87      -1.21  #> 3 BC           -1.20     0.0256     -1.51      -0.887 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A            -1.14     0.0112 NA         NA         #> 2 C             0.396    0.0179 NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Continuous_data_example.html","id":"stc","dir":"Articles","previous_headings":"Model fitting in R","what":"STC","title":"Continuous data example","text":"STC conventional outcome regression method. involves fitting regression model outcome treatment covariates IPD. IPD effect modifiers centred mean BC values. g(μn)=β0+(𝐱n−𝛉)β1+(βz+(𝐱𝐧𝐄𝐌−𝛉𝐄𝐌)𝛃𝟐)(zn=1) g(\\mu_n) = \\beta_0 + (\\boldsymbol{x}_n - \\boldsymbol{\\theta}) \\beta_1 + (\\beta_z + (\\boldsymbol{x_n^{EM}} - \\boldsymbol{\\theta^{EM}}) \\boldsymbol{\\beta_2}) \\; \\mbox{}(z_n=1) β0\\beta_0 intercept, β1\\beta_1 covariate coefficients, βz\\beta_z β2\\beta_2 effect modifier coefficients, znz_n indicator variables effect alternative treatment. g(⋅)g(\\cdot) link function e.g. log\\log. already mentioned, running STC analysis almost identical previous analysis now use strategy_stc() strategy function instead formula centered covariates. y=X3+X4+βt(X1−X1‾)+βt(X2−X2‾) y = X_3 + X_4 + \\beta_t(X_1 - \\bar{X_1}) + \\beta_t(X_2 - \\bar{X_2}) However, outstandR() knows handle can simply pass (uncentred) formula . last two approaches, perform G-computation firstly frequentist MLE approach Bayesian approach.","code":"outstandR_stc <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_stc(               formula = lin_form,               family = gaussian(link = \"identity\"))) outstandR_stc #> Object of class 'outstandR'  #> Model: gaussian  #> Scale: risk_difference  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.363   NA           NA        NA     #> 2 AC           -1.56    NA           NA        NA     #> 3 BC           -1.20     0.0256      -1.51     -0.887 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A           -1.47          NA NA         NA         #> 2 C            0.0930        NA NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Continuous_data_example.html","id":"parametric-g-computation-with-maximum-likelihood-estimation","dir":"Articles","previous_headings":"Model fitting in R","what":"Parametric G-computation with maximum-likelihood estimation","title":"Continuous data example","text":"G-computation marginalizes conditional estimates separating regression modelling estimation marginal treatment effect versus C. First, regression model observed outcome yy covariates xx treatment zz fitted AC IPD: g(μn)=β0+𝐱n𝛃𝟏+(βz+𝐱𝐧𝐄𝐌𝛃𝟐)(zn=1) g(\\mu_n) = \\beta_0 + \\boldsymbol{x}_n \\boldsymbol{\\beta_1} + (\\beta_z + \\boldsymbol{x_n^{EM}} \\boldsymbol{\\beta_2}) \\; \\mbox{}(z_n = 1) context G-computation, regression model often called “Q-model.” fitted Q-model, regression coefficients treated nuisance parameters. parameters applied simulated covariates x*x* predict hypothetical outcomes subject possible treatments. Namely, pair predicted outcomes, also called potential outcomes, C, generated subject. plugging treatment C regression fit every simulated observation, predict marginal outcome mean hypothetical scenario units treatment C: μ̂0=∫x*g−1(β̂0+x*β̂1)p(x*)dx* \\hat{\\mu}_0 = \\int_{x^*} g^{-1} (\\hat{\\beta}_0 + x^* \\hat{\\beta}_1 ) p(x^*) \\; \\text{d}x^* estimate marginal population-average treatment effect versus C linear predictor scale, one back-transforms scale average predictions, taken subjects natural outcome scale, calculates difference average linear predictions: Δ̂10(2)=g(μ̂1)−g(μ̂0) \\hat{\\Delta}^{(2)}_{10} = g(\\hat{\\mu}_1) - g(\\hat{\\mu}_0)","code":"outstandR_gcomp_ml <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_gcomp_ml(formula = lin_form,                                          family = gaussian(link = \"identity\"))) outstandR_gcomp_ml #> Object of class 'outstandR'  #> Model: gaussian  #> Scale: risk_difference  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.348    0.0596     -0.826      0.130 #> 2 AC           -1.55     0.0339     -1.91      -1.19  #> 3 BC           -1.20     0.0256     -1.51      -0.887 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A            -1.10     0.0113 NA         NA         #> 2 C             0.444    0.0241 NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Continuous_data_example.html","id":"bayesian-g-computation-with-mcmc","dir":"Articles","previous_headings":"Model fitting in R","what":"Bayesian G-computation with MCMC","title":"Continuous data example","text":"difference Bayesian G-computation maximum-likelihood counterpart estimated distribution predicted outcomes. Bayesian approach also marginalizes, integrates standardizes joint posterior distribution conditional nuisance parameters outcome regression, well joint covariate distribution. Draw vector size N*N^* predicted outcomes yz*y^*_z set intervention z*∈{0,1}z^* \\\\{0, 1\\} posterior predictive distribution specific treatment. defined p(yz**∣𝒟AC)=∫βp(yz**∣β)p(β∣𝒟AC)dβp(y^*_{z^*} \\mid \\mathcal{D}_{AC}) = \\int_{\\beta} p(y^*_{z^*} \\mid \\beta) p(\\beta \\mid \\mathcal{D}_{AC}) d\\beta p(β∣𝒟AC)p(\\beta \\mid \\mathcal{D}_{AC}) posterior distribution outcome regression coefficients β\\beta, encode predictor-outcome relationships observed AC trial IPD. given : p(yz**∣𝒟AC)=∫x*p(y*∣z*,x*,𝒟AC)p(x*∣𝒟AC)dx* p(y^*_{^z*} \\mid \\mathcal{D}_{AC}) = \\int_{x^*} p(y^* \\mid z^*, x^*, \\mathcal{D}_{AC}) p(x^* \\mid \\mathcal{D}_{AC})\\; \\text{d}x^* =∫x*∫βp(y*∣z*,x*,β)p(x*∣β)p(β∣𝒟AC)dβdx* = \\int_{x^*} \\int_{\\beta} p(y^* \\mid z^*, x^*, \\beta) p(x^* \\mid \\beta) p(\\beta \\mid \\mathcal{D}_{AC})\\; d\\beta \\; \\text{d}x^* practice, integrals can approximated numerically, using full Bayesian estimation via Markov chain Monte Carlo (MCMC) sampling. average, variance interval estimates marginal treatment effect can derived empirically draws posterior density. can draw vector size N*N^* predicted outcomes yz*y^*_z set intervention z*z^* posterior predictive distribution specific treatment.","code":"outstandR_gcomp_stan <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_gcomp_stan(               formula = lin_form,               family = gaussian(link = \"identity\"))) outstandR_gcomp_stan #> Object of class 'outstandR'  #> Model: gaussian  #> Scale: risk_difference  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.335    0.0560     -0.799      0.129 #> 2 AC           -1.54     0.0304     -1.88      -1.19  #> 3 BC           -1.20     0.0256     -1.51      -0.887 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl> <lgl>      <lgl>      #> 1 A            -1.10     0.0113 NA         NA         #> 2 C             0.433    0.0206 NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Continuous_data_example.html","id":"multiple-imputation-marginalisation","dir":"Articles","previous_headings":"Model fitting in R","what":"Multiple imputation marginalisation","title":"Continuous data example","text":"ref equationhere equation ","code":"outstandR_mim <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_mim(               formula = lin_form,               family = gaussian(link = \"identity\"))) outstandR_mim #> Object of class 'outstandR'  #> Model: gaussian  #> Scale: risk_difference  #> Common treatment: C  #> Individual patient data study: AC  #> Aggregate level data study: BC  #> Confidence interval level: 0.95  #>  #> Contrasts: #>  #> # A tibble: 3 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>         <dbl>     <dbl>      <dbl>      <dbl> #> 1 AB           -0.335    0.0538     -0.789      0.120 #> 2 AC           -1.53     0.0281     -1.86      -1.21  #> 3 BC           -1.20     0.0256     -1.51      -0.887 #>  #> Absolute: #>  #> # A tibble: 2 × 5 #>   Treatments Estimate Std.Error lower.0.95 upper.0.95 #>   <chr>      <lgl>    <lgl>     <lgl>      <lgl>      #> 1 A          NA       NA        NA         NA         #> 2 C          NA       NA        NA         NA"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Continuous_data_example.html","id":"model-comparison","dir":"Articles","previous_headings":"Model fitting in R","what":"Model comparison","title":"Continuous data example","text":"Combine outputs relative effects table contrasts methods.","code":"knitr::kable(   data.frame(     `MAIC` = unlist(outstandR_maic$contrasts$means),     `STC` = unlist(outstandR_stc$contrasts$means),     `Gcomp ML` = unlist(outstandR_gcomp_ml$contrasts$means),     `Gcomp Bayes` = unlist(outstandR_gcomp_stan$contrasts$means),     `MIM` = unlist(outstandR_mim$contrasts$means))   |>      round(2))"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/copd_analysis.html","id":"analysis","dir":"Articles","previous_headings":"","what":"Analysis","title":"COPD Analysis","text":"First, let us load necessary packages.","code":"library(boot)      # non-parametric bootstrap in MAIC and ML G-computation library(copula)    # simulating BC covariates from Gaussian copula library(rstanarm)  # fit outcome regression, draw outcomes in Bayesian G-computation library(outstandR)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/copd_analysis.html","id":"data","dir":"Articles","previous_headings":"Analysis","what":"Data","title":"COPD Analysis","text":"general format data sets consist following.","code":"set.seed(555)  AC.IPD <- read.csv(here::here(\"raw-data\", \"AC_IPD.csv\"))  # AC patient-level data BC.ALD <- read.csv(here::here(\"raw-data\", \"BC_ALD.csv\"))  # BC aggregate-level data"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/copd_analysis.html","id":"ac-ipd-individual-patient-data","dir":"Articles","previous_headings":"Analysis > Data","what":"AC.IPD: Individual patient data","title":"COPD Analysis","text":"X*: patient measurements trt: treatment ID y: (logical) indicator whether event observed","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/copd_analysis.html","id":"bc-ald-aggregate-level-data","dir":"Articles","previous_headings":"Analysis > Data","what":"BC.ALD: Aggregate-level data","title":"COPD Analysis","text":"mean.X*: mean patient measurement sd.X*: standard deviation patient measurement y.*.sum: total number events y.*.bar: total number events N.*: total number individuals Note wildcard * usually integer 1 trial identifier B, C. data look like following. 4 correlated continuous covariates generated per subject, simulated multivariate normal distribution.","code":"head(AC.IPD) #>            X1        X2          X3          X4 trt y #> 1  0.43734111 0.6747901  0.93001035  0.09165363   1 0 #> 2  0.05643081 0.5987971  0.03557646  0.59954129   1 1 #> 3 -0.08048882 0.6843784  0.93147222 -0.11419716   1 0 #> 4 -0.38580926 0.5716644 -0.32252212  0.02551808   1 0 #> 5  1.00755116 0.8220826  0.92735892  0.84414221   1 1 #> 6  0.19443956 0.2031329  0.34990179  0.15633009   1 0 BC.ALD #>     mean.X1   mean.X2   mean.X3   mean.X4     sd.X1     sd.X2     sd.X3 #> 1 0.5908996 0.6414179 0.5856529 0.6023671 0.3863145 0.4033615 0.4076097 #>      sd.X4 y.B.sum y.B.bar N.B y.C.sum y.C.bar N.C #> 1 0.395132     182   0.455 400     149   0.745 200"},{"path":[]},{"path":[]},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/copd_analysis.html","id":"maic","dir":"Articles","previous_headings":"Model fitting in R","what":"MAIC","title":"COPD Analysis","text":"formula used model y=X3+X4+βtX1+βtX2 y = X_3 + X_4 + \\beta_t X_1 + \\beta_t X_2  corresponds following R formula object passed argument strategy function. returned object class outstandR.","code":"lin_form <- as.formula(\"y ~ X3 + X4 + trt*X1 + trt*X2\") outstandR_maic <- outstandR(AC.IPD, BC.ALD, strategy = strategy_maic(formula = lin_form)) outstandR_maic"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/copd_analysis.html","id":"stc","dir":"Articles","previous_headings":"Model fitting in R","what":"STC","title":"COPD Analysis","text":"g(μn)=β0+(𝐱n−𝛉)β1+(βz+(𝐱𝐧𝐄𝐌−𝛉𝐄𝐌)𝛃𝟐)(zn=1) g(\\mu_n) = \\beta_0 + (\\boldsymbol{x}_n - \\boldsymbol{\\theta}) \\beta_1 + (\\beta_z + (\\boldsymbol{x_n^{EM}} - \\boldsymbol{\\theta^{EM}}) \\boldsymbol{\\beta_2}) \\; \\mbox{}(z_n=1) y=X3+X4+βt(X1−X1‾)+βt(X2−X2‾) y = X_3 + X_4 + \\beta_t(X_1 - \\bar{X_1}) + \\beta_t(X_2 - \\bar{X_2})  However, outstandR() knows handle can simply pass (uncentred) formula .","code":"outstandR_stc <- outstandR(AC.IPD, BC.ALD, strategy = strategy_stc(formula = lin_form)) outstandR_stc"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/copd_analysis.html","id":"parametric-g-computation-with-maximum-likelihood-estimation","dir":"Articles","previous_headings":"Model fitting in R","what":"Parametric G-computation with maximum-likelihood estimation","title":"COPD Analysis","text":"g(μn)=β0+𝐱n𝛃𝟏+(βz+𝐱𝐧𝐄𝐌𝛃𝟐)(zn=1) g(\\mu_n) = \\beta_0 + \\boldsymbol{x}_n \\boldsymbol{\\beta_1} + (\\beta_z + \\boldsymbol{x_n^{EM}} \\boldsymbol{\\beta_2}) \\; \\mbox{}(z_n = 1) μ̂0=∫x*g−1(β̂0+x*β̂1)p(x*)dx* \\hat{\\mu}_0 = \\int_{x^*} g^{-1} (\\hat{\\beta}_0 + x^* \\hat{\\beta}_1 ) p(x^*) \\; \\text{d}x^* Δ̂10(2)=g(μ̂1)−g(μ̂0) \\hat{\\Delta}^{(2)}_{10} = g(\\hat{\\mu}_1) - g(\\hat{\\mu}_0)","code":"outstandR_gcomp_ml <- outstandR(AC.IPD, BC.ALD, strategy = strategy_gcomp_ml(formula = lin_form)) outstandR_gcomp_ml"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/copd_analysis.html","id":"bayesian-g-computation-with-mcmc","dir":"Articles","previous_headings":"Model fitting in R","what":"Bayesian G-computation with MCMC","title":"COPD Analysis","text":"p(yz**∣𝒟AC)=∫x*p(y*∣z*,x*,𝒟AC)p(x*∣𝒟AC)dx* p(y^*_{^z*} \\mid \\mathcal{D}_{AC}) = \\int_{x^*} p(y^* \\mid z^*, x^*, \\mathcal{D}_{AC}) p(x^* \\mid \\mathcal{D}_{AC})\\; \\text{d}x^* =∫x*∫βp(y*∣z*,x*,β)p(x*∣β)p(β∣𝒟AC)dβdx* = \\int_{x^*} \\int_{\\beta} p(y^* \\mid z^*, x^*, \\beta) p(x^* \\mid \\beta) p(\\beta \\mid \\mathcal{D}_{AC})\\; d\\beta \\; \\text{d}x^*","code":"outstandR_gcomp_stan <- outstandR(AC.IPD, BC.ALD, strategy = strategy_gcomp_stan(formula = lin_form)) #>  #> SAMPLING FOR MODEL 'continuous' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 7e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.7 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 1: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 1: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 1: Iteration: 1200 / 4000 [ 30%]  (Warmup) #> Chain 1: Iteration: 1600 / 4000 [ 40%]  (Warmup) #> Chain 1: Iteration: 2000 / 4000 [ 50%]  (Warmup) #> Chain 1: Iteration: 2001 / 4000 [ 50%]  (Sampling) #> Chain 1: Iteration: 2400 / 4000 [ 60%]  (Sampling) #> Chain 1: Iteration: 2800 / 4000 [ 70%]  (Sampling) #> Chain 1: Iteration: 3200 / 4000 [ 80%]  (Sampling) #> Chain 1: Iteration: 3600 / 4000 [ 90%]  (Sampling) #> Chain 1: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.174 seconds (Warm-up) #> Chain 1:                0.18 seconds (Sampling) #> Chain 1:                0.354 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'continuous' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 9e-06 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.09 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 2: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 2: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 2: Iteration: 1200 / 4000 [ 30%]  (Warmup) #> Chain 2: Iteration: 1600 / 4000 [ 40%]  (Warmup) #> Chain 2: Iteration: 2000 / 4000 [ 50%]  (Warmup) #> Chain 2: Iteration: 2001 / 4000 [ 50%]  (Sampling) #> Chain 2: Iteration: 2400 / 4000 [ 60%]  (Sampling) #> Chain 2: Iteration: 2800 / 4000 [ 70%]  (Sampling) #> Chain 2: Iteration: 3200 / 4000 [ 80%]  (Sampling) #> Chain 2: Iteration: 3600 / 4000 [ 90%]  (Sampling) #> Chain 2: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.175 seconds (Warm-up) #> Chain 2:                0.2 seconds (Sampling) #> Chain 2:                0.375 seconds (Total) #> Chain 2: outstandR_gcomp_stan"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/copd_analysis.html","id":"multiple-imputation-marginalisation","dir":"Articles","previous_headings":"Model fitting in R","what":"Multiple imputation marginalisation","title":"COPD Analysis","text":"Combine outputs","code":"outstandR_mim <- outstandR(AC.IPD, BC.ALD, strategy = strategy_mim(formula = lin_form)) #>  #> SAMPLING FOR MODEL 'continuous' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 1.6e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.16 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 1: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 1: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 1: Iteration: 1001 / 4000 [ 25%]  (Sampling) #> Chain 1: Iteration: 1400 / 4000 [ 35%]  (Sampling) #> Chain 1: Iteration: 1800 / 4000 [ 45%]  (Sampling) #> Chain 1: Iteration: 2200 / 4000 [ 55%]  (Sampling) #> Chain 1: Iteration: 2600 / 4000 [ 65%]  (Sampling) #> Chain 1: Iteration: 3000 / 4000 [ 75%]  (Sampling) #> Chain 1: Iteration: 3400 / 4000 [ 85%]  (Sampling) #> Chain 1: Iteration: 3800 / 4000 [ 95%]  (Sampling) #> Chain 1: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.093 seconds (Warm-up) #> Chain 1:                0.3 seconds (Sampling) #> Chain 1:                0.393 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'continuous' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 1.1e-05 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.11 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 2: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 2: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 2: Iteration: 1001 / 4000 [ 25%]  (Sampling) #> Chain 2: Iteration: 1400 / 4000 [ 35%]  (Sampling) #> Chain 2: Iteration: 1800 / 4000 [ 45%]  (Sampling) #> Chain 2: Iteration: 2200 / 4000 [ 55%]  (Sampling) #> Chain 2: Iteration: 2600 / 4000 [ 65%]  (Sampling) #> Chain 2: Iteration: 3000 / 4000 [ 75%]  (Sampling) #> Chain 2: Iteration: 3400 / 4000 [ 85%]  (Sampling) #> Chain 2: Iteration: 3800 / 4000 [ 95%]  (Sampling) #> Chain 2: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.085 seconds (Warm-up) #> Chain 2:                0.288 seconds (Sampling) #> Chain 2:                0.373 seconds (Total) #> Chain 2: outstandR_mim knitr::kable(   data.frame(   `MAIC` = unlist(outstandR_maic$contrasts),   `STC` = unlist(outstandR_stc$contrasts),   `Gcomp ML` = unlist(outstandR_gcomp_ml$contrasts),   `Gcomp Bayes` = unlist(outstandR_gcomp_stan$contrasts),   `MIM` = unlist(outstandR_mim$contrasts)) )"},{"path":[]},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Count_data_example.html","id":"example-analysis","dir":"Articles","previous_headings":"","what":"Example analysis","title":"Count data example","text":"First, let us load necessary packages.","code":"library(boot)      # non-parametric bootstrap in MAIC and ML G-computation library(copula)    # simulating BC covariates from Gaussian copula library(rstanarm)  # fit outcome regression, draw outcomes in Bayesian G-computation library(outstandR) library(simcovariates)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Count_data_example.html","id":"data","dir":"Articles","previous_headings":"Example analysis","what":"Data","title":"Count data example","text":"First, use gen_data() function available simcovariates package. Similarly, aggregate data additional summarise step.","code":"library(dplyr) library(MASS) N <- 200 allocation <- 2/3      # active treatment vs. placebo allocation ratio (2:1) b_trt <- log(0.17)     # conditional effect of active treatment vs. common comparator b_X <- -log(0.5)       # conditional effect of each prognostic variable b_EM <- -log(0.67)     # conditional interaction effect of each effect modifier meanX_AC <- c(0.45, 0.45)       # mean of normally-distributed covariate in AC trial meanX_BC <- c(0.6, 0.6)         # mean of each normally-distributed covariate in BC meanX_EM_AC <- c(0.45, 0.45)    # mean of normally-distributed EM covariate in AC trial meanX_EM_BC <- c(0.6, 0.6)      # mean of each normally-distributed EM covariate in BC sdX <- c(0.4, 0.4)     # standard deviation of each covariate (same for AC and BC) sdX_EM <- c(0.4, 0.4)  # standard deviation of each EM covariate corX <- 0.2            # covariate correlation coefficient   b_0 <- -0.6            # baseline intercept coefficient  ##TODO: fixed value  ipd_trial <- gen_data(N, b_trt, b_X, b_EM, b_0,                       meanX_AC, sdX,                        meanX_EM_AC, sdX_EM,                        corX, allocation,                       family = poisson(link = \"log\"))  ipd_trial$trt <- factor(ipd_trial$trt, labels = c(\"C\", \"A\")) BC.IPD <- gen_data(N, b_trt, b_X, b_EM, b_0,                    meanX_BC, sdX,                     meanX_EM_BC, sdX_EM,                     corX, allocation,                    family = poisson(link = \"log\"))  cov.X <- BC.IPD %>%   summarise(across(starts_with(\"X\"),                    list(mean = mean, sd = sd),                    .names = \"{fn}.{col}\"))  out.C <- dplyr::filter(BC.IPD, trt == 1) %>%   summarise(y.B.sum = sum(y),             y.B.bar = mean(y),             N.B = n())  out.B <- dplyr::filter(BC.IPD, trt == 0) %>%   summarise(y.C.sum = sum(y),             y.C.bar = mean(y),             N.C = n())  ald_trial <- cbind.data.frame(cov.X, out.C, out.B)  # By definition, the true log-OR relative effect in the AC population between AC is `r b_trt`. Between BC is `r b_trt` and between AB is `r b_trt - b_trt`. # A naive indirect comparison, ignoring the presence of effect modifiers, would calculate the C vs B effect in the AC population as # `b_trt - b_trt`."},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Count_data_example.html","id":"output-statistics","dir":"Articles","previous_headings":"Example analysis","what":"Output statistics","title":"Count data example","text":"implement MAIC, STC, G-computation methods obtain marginal variance, defined  marginal treatment effect, defined log-odds ratio,  C‾\\bar{C} compliment CC e.g. nC‾=NC−ncn_{\\bar{C}} = N_C - n_c.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Count_data_example.html","id":"model-fitting-in-r","dir":"Articles","previous_headings":"","what":"Model fitting in R","title":"Count data example","text":"outstandR package written easy use essential consists single function, outstandR(). can used run different types model, call strategies. first two arguments outstandR() individual aggregate-level data, respectively. strategy argument outstandR takes functions called strategy_*(), wildcard * replaced name particular method required, e.g. strategy_maic() MAIC. specific example provided .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Count_data_example.html","id":"maic","dir":"Articles","previous_headings":"Model fitting in R","what":"MAIC","title":"Count data example","text":"Using individual level data AC firstly perform non-parametric bootstrap maic.boot function R = 1000 replicates. function fits treatment coefficient marginal effect vs C. returned value object class boot {boot} package. calculate bootstrap mean variance wrapper function maic_boot_stats(). formula used model y=X3+X4+βtX1+βtX2 y = X_3 + X_4 + \\beta_t X_1 + \\beta_t X_2 corresponds following R formula object passed argument strategy function. returned object class outstandR. see list object 3 parts, containing statistics pair treatments. mean contrasts, variances confidence intervals (CI), respectively. default CI 95% can altered outstandR CI argument.","code":"lin_form <- as.formula(\"y ~ X3 + X4 + trt*X1 + trt*X2\") outstandR_maic <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_maic(               formula = lin_form,               family = poisson(link = \"log\"))) outstandR_maic"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Count_data_example.html","id":"stc","dir":"Articles","previous_headings":"Model fitting in R","what":"STC","title":"Count data example","text":"STC conventional outcome regression method. involves fitting regression model outcome treatment covariates IPD. IPD effect modifiers centred mean BC values. g(μn)=β0+(𝐱n−𝛉)β1+(βz+(𝐱𝐧𝐄𝐌−𝛉𝐄𝐌)𝛃𝟐)(zn=1) g(\\mu_n) = \\beta_0 + (\\boldsymbol{x}_n - \\boldsymbol{\\theta}) \\beta_1 + (\\beta_z + (\\boldsymbol{x_n^{EM}} - \\boldsymbol{\\theta^{EM}}) \\boldsymbol{\\beta_2}) \\; \\mbox{}(z_n=1) β0\\beta_0 intercept, β1\\beta_1 covariate coefficients, βz\\beta_z β2\\beta_2 effect modifier coefficients, znz_n indicator variables effect alternative treatment. g(⋅)g(\\cdot) link function e.g. log\\log. already mentioned, running STC analysis almost identical previous analysis now use strategy_stc() strategy function instead formula centered covariates. y=X3+X4+βt(X1−X1‾)+βt(X2−X2‾) y = X_3 + X_4 + \\beta_t(X_1 - \\bar{X_1}) + \\beta_t(X_2 - \\bar{X_2}) However, outstandR() knows handle can simply pass (uncentred) formula . last two approaches, perform G-computation firstly frequentist MLE approach Bayesian approach.","code":"outstandR_stc <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_stc(               formula = lin_form,               family = poisson(link = \"log\")))  outstandR_stc"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Count_data_example.html","id":"parametric-g-computation-with-maximum-likelihood-estimation","dir":"Articles","previous_headings":"Model fitting in R","what":"Parametric G-computation with maximum-likelihood estimation","title":"Count data example","text":"G-computation marginalizes conditional estimates separating regression modelling estimation marginal treatment effect versus C. First, regression model observed outcome yy covariates xx treatment zz fitted AC IPD: g(μn)=β0+𝐱n𝛃𝟏+(βz+𝐱𝐧𝐄𝐌𝛃𝟐)(zn=1) g(\\mu_n) = \\beta_0 + \\boldsymbol{x}_n \\boldsymbol{\\beta_1} + (\\beta_z + \\boldsymbol{x_n^{EM}} \\boldsymbol{\\beta_2}) \\; \\mbox{}(z_n = 1) context G-computation, regression model often called “Q-model.” fitted Q-model, regression coefficients treated nuisance parameters. parameters applied simulated covariates x*x* predict hypothetical outcomes subject possible treatments. Namely, pair predicted outcomes, also called potential outcomes, C, generated subject. plugging treatment C regression fit every simulated observation, predict marginal outcome mean hypothetical scenario units treatment C: μ̂0=∫x*g−1(β̂0+x*β̂1)p(x*)dx* \\hat{\\mu}_0 = \\int_{x^*} g^{-1} (\\hat{\\beta}_0 + x^* \\hat{\\beta}_1 ) p(x^*) \\; \\text{d}x^* estimate marginal population-average treatment effect versus C linear predictor scale, one back-transforms scale average predictions, taken subjects natural outcome scale, calculates difference average linear predictions: Δ̂10(2)=g(μ̂1)−g(μ̂0) \\hat{\\Delta}^{(2)}_{10} = g(\\hat{\\mu}_1) - g(\\hat{\\mu}_0)","code":"outstandR_gcomp_ml <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_gcomp_ml(               formula = lin_form,               family = poisson(link = \"log\")))  outstandR_gcomp_ml"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Count_data_example.html","id":"bayesian-g-computation-with-mcmc","dir":"Articles","previous_headings":"Model fitting in R","what":"Bayesian G-computation with MCMC","title":"Count data example","text":"difference Bayesian G-computation maximum-likelihood counterpart estimated distribution predicted outcomes. Bayesian approach also marginalizes, integrates standardizes joint posterior distribution conditional nuisance parameters outcome regression, well joint covariate distribution. Draw vector size N*N^* predicted outcomes yz*y^*_z set intervention z*∈{0,1}z^* \\\\{0, 1\\} posterior predictive distribution specific treatment. defined p(yz**∣𝒟AC)=∫βp(yz**∣β)p(β∣𝒟AC)dβp(y^*_{z^*} \\mid \\mathcal{D}_{AC}) = \\int_{\\beta} p(y^*_{z^*} \\mid \\beta) p(\\beta \\mid \\mathcal{D}_{AC}) d\\beta p(β∣𝒟AC)p(\\beta \\mid \\mathcal{D}_{AC}) posterior distribution outcome regression coefficients β\\beta, encode predictor-outcome relationships observed AC trial IPD. given : p(yz**∣𝒟AC)=∫x*p(y*∣z*,x*,𝒟AC)p(x*∣𝒟AC)dx* p(y^*_{^z*} \\mid \\mathcal{D}_{AC}) = \\int_{x^*} p(y^* \\mid z^*, x^*, \\mathcal{D}_{AC}) p(x^* \\mid \\mathcal{D}_{AC})\\; \\text{d}x^* =∫x*∫βp(y*∣z*,x*,β)p(x*∣β)p(β∣𝒟AC)dβdx* = \\int_{x^*} \\int_{\\beta} p(y^* \\mid z^*, x^*, \\beta) p(x^* \\mid \\beta) p(\\beta \\mid \\mathcal{D}_{AC})\\; d\\beta \\; \\text{d}x^* practice, integrals can approximated numerically, using full Bayesian estimation via Markov chain Monte Carlo (MCMC) sampling. average, variance interval estimates marginal treatment effect can derived empirically draws posterior density. can draw vector size N*N^* predicted outcomes yz*y^*_z set intervention z*z^* posterior predictive distribution specific treatment.","code":"outstandR_gcomp_stan <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_gcomp_stan(               formula = lin_form,               family = poisson(link = \"log\"))) outstandR_gcomp_stan"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Count_data_example.html","id":"multiple-imputation-marginalisation","dir":"Articles","previous_headings":"Model fitting in R","what":"Multiple imputation marginalisation","title":"Count data example","text":"ref equationhere equation ","code":"outstandR_mim <-   outstandR(ipd_trial, ald_trial,             strategy = strategy_mim(               formula = lin_form,               family = poisson(link = \"log\"))) outstandR_mim"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/articles/Count_data_example.html","id":"model-comparison","dir":"Articles","previous_headings":"Model fitting in R","what":"Model comparison","title":"Count data example","text":"Combine outputs log-odds ratio table contrasts methods.","code":"knitr::kable(   data.frame(     `MAIC` = unlist(outstandR_maic$contrasts$means),     `STC` = unlist(outstandR_stc$contrasts$means),     `Gcomp ML` = unlist(outstandR_gcomp_ml$contrasts$means),     `Gcomp Bayes` = unlist(outstandR_gcomp_stan$contrasts$means),     `MIM` = unlist(outstandR_mim$contrasts$means)) ) |>    round(2)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nathan Green. Author, maintainer. Antonio Remiro-Azocar. Author.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Green N, Remiro-Azocar (2025). outstandR: Model-based Standardisation. R package version 0.0.0.9000, https://StatisticsHealthEconomics.github.io/outstandR.","code":"@Manual{,   title = {outstandR: Model-based Standardisation},   author = {Nathan Green and Antonio Remiro-Azocar},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://StatisticsHealthEconomics.github.io/outstandR}, }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/index.html","id":"outstandr-outcome-regression-standardisation","dir":"","previous_headings":"","what":"Model-based Standardisation","title":"Model-based Standardisation","text":"Model-based Standardisation G-computation","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Model-based Standardisation","text":"outstandR R package designed facilitate outcome regression standardisation using model-based approaches, particularly focusing G-estimation. package provides tools apply standardisation techniques indirect treatment comparisons, especially scenarios limited individual patient data. Key features include: - G-computation methods - Multiple imputation marginalisation - MAIC, STC comparison","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/index.html","id":"who-is-this-package-for","dir":"","previous_headings":"","what":"Who is this package for?","title":"Model-based Standardisation","text":"target audience outstandR want perform model-based standardization specific context two-study indirect treatment comparisons limited subject-level data. model-based standardization two additional steps: Covariate simulation (overcome limited subject-level data one studies) Indirect comparison across studies","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/index.html","id":"background","dir":"","previous_headings":"","what":"Background","title":"Model-based Standardisation","text":"R package contains code originally written papers: Remiro-Azócar, ., Heath, . & Baio, G. (2022) Parametric G-computation Compatible Indirect Treatment Comparisons Limited Individual Patient Data. Res Synth Methods;1–31. Remiro-Azócar, ., Heath, ., & Baio, G. (2023) Model-based standardization using multiple imputation. BMC Medical Research Methodology, 1–15. https://doi.org/10.1186/s12874-024-02157-x","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Model-based Standardisation","text":"Install development version GitHub using remotes:","code":"remotes::install_github(\"StatisticsHealthEconomics/outstandR\")"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Model-based Standardisation","text":"package licensed GPLv3. information, see LICENSE.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Model-based Standardisation","text":"welcome contributions! Please submit contributions Pull Requests, following contributing guidelines. report issues /seek support, please file new ticket issue tracker. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/AC_IPD.html","id":null,"dir":"Reference","previous_headings":"","what":"Data set for individual level patient data — AC_IPD","title":"Data set for individual level patient data — AC_IPD","text":"data set contains simulated patient covariate outcome values.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/AC_IPD.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data set for individual level patient data — AC_IPD","text":"data list including variables needed outstandR basic example. variables follows: list(\"X1\") Numeric covariate list(\"X2\") Numeric covariate list(\"X3\") Numeric covariate list(\"X4\") Numeric covariate list(\"trt\") Integer treatment identifier list(\"y\") Integer binary outcome","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/AC_IPD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data set for individual level patient data — AC_IPD","text":"Remiro‐Azócar , Heath , Baio G (2022)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/ALD_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate-level data mean and variance statistics — ALD_stats","title":"Aggregate-level data mean and variance statistics — ALD_stats","text":"Computes mean variance marginal treatment effects aggregate-level trial data.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/ALD_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate-level data mean and variance statistics — ALD_stats","text":"","code":"ALD_stats(strategy, ald, treatments = list(\"B\", \"C\"), scale)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/ALD_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate-level data mean and variance statistics — ALD_stats","text":"strategy list containing strategy details, including family distribution. ald Aggregate-level trial data treatments Treatment labels list; default B, C (common; e.g. placebo) scale scaling parameter calculation.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/ALD_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate-level data mean and variance statistics — ALD_stats","text":"list containing: mean marginal treatment effect mean. var marginal treatment effect variance.","code":""},{"path":[]},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/ALD_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate-level data mean and variance statistics — ALD_stats","text":"","code":"if (FALSE) { # \\dontrun{ strategy <- list(family = list(family = \"binomial\"))  # basic version ald <- data.frame(trial = 1:5, n_B = c(10, 20, 15, 30, 25), n_C = c(12, 18, 20, 25, 22)) ALD_stats(strategy, ald, treatments = list(\"B\", \"C\"), scale = \"log\") } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/BC_ALD.html","id":null,"dir":"Reference","previous_headings":"","what":"Data set for aggregate level patient data — BC_ALD","title":"Data set for aggregate level patient data — BC_ALD","text":"data set contains summaries simulated patient covariate outcome values.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/BC_ALD.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data set for aggregate level patient data — BC_ALD","text":"data list including variables needed outstandR basic example. variables follows: list(\"mean.X1\") Numeric value list(\"mean.X2\") Numeric value list(\"mean.X3\") Numeric value list(\"mean.X4\") Numeric value list(\"sd.X1\") Numeric standard deviation value list(\"sd.X2\") Numeric standard deviation value list(\"sd.X3\") Numeric standard deviation value list(\"sd.X4\") Numeric standard deviation value list(\"y.B.sum\") Integer number patients event B treatment list(\"y.B.bar\") Numeric proportion patients B treatment list(\"N.B\") Integer Total number patients B treatment list(\"y.C.sum\") Integer number patients event C treatment list(\"y.C.bar\") Numeric proportion patients C treatment list(\"N.C\") Integer Total number patients C treatment","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/BC_ALD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data set for aggregate level patient data — BC_ALD","text":"Remiro‐Azócar , Heath , Baio G (2022)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Bias estimate — bias","title":"Bias estimate — bias","text":"Bias estimate","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bias estimate — bias","text":"","code":"bias(theta.hat, theta)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bias estimate — bias","text":"theta.hat Theta hat theta Theta","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/bias.mcse.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo SE of bias estimate — bias.mcse","title":"Monte Carlo SE of bias estimate — bias.mcse","text":"Monte Carlo SE bias estimate","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/bias.mcse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo SE of bias estimate — bias.mcse","text":"","code":"bias.mcse(theta.hat)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/bias.mcse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo SE of bias estimate — bias.mcse","text":"theta.hat theta hat","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/bias.mcse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo SE of bias estimate — bias.mcse","text":"\\(sqrt(1/(nsim*(nsim-1))*tmp)\\)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calculate_ate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Average Treatment Effect — calculate_ate","title":"Calculate Average Treatment Effect — calculate_ate","text":"Computes average treatment effect (ATE) based specified effect scale.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calculate_ate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Average Treatment Effect — calculate_ate","text":"","code":"calculate_ate(mean_A, mean_C, effect)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calculate_ate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Average Treatment Effect — calculate_ate","text":"mean_A, mean_C Mean outcome treatment control effect character string specifying effect scale. Options : \"log_odds\" Log-odds difference. \"risk_difference\" Risk difference. \"delta_z\" Probit scale difference (z-scores). \"log_relative_risk_rare_events\" Log relative risk rare events. \"log_relative_risk\" Log relative risk.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calculate_ate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Average Treatment Effect — calculate_ate","text":"computed average treatment effect specified scale.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calculate_ate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Average Treatment Effect — calculate_ate","text":"","code":"if (FALSE) { # \\dontrun{ calculate_ate(mean_A = 0.7, mean_C = 0.5, effect = \"log_odds\") calculate_ate(mean_A = 0.7, mean_C = 0.5, effect = \"risk_difference\") } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calculate_trial_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate trial variance — calculate_trial_variance","title":"Calculate trial variance — calculate_trial_variance","text":"Computes variance treatment effects trial based specified family distribution.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calculate_trial_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate trial variance — calculate_trial_variance","text":"","code":"calculate_trial_variance(ald, tid, effect, family)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calculate_trial_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate trial variance — calculate_trial_variance","text":"ald Aggregate-level data. tid Treatment identifier used extract relevant columns ald. effect character string specifying effect scale (e.g., \"log_odds\", \"risk_difference\"). family character string specifying model family (e.g., \"binomial\", \"gaussian\").","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calculate_trial_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate trial variance — calculate_trial_variance","text":"computed variance treatment effects.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calculate_trial_variance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate trial variance — calculate_trial_variance","text":"","code":"if (FALSE) { # \\dontrun{ ald <- data.frame(y.B.sum = c(10), N.B = c(100)) calculate_trial_variance(ald, tid = \"B\", effect = \"log_odds\", family = \"binomial\") } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_ALD_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate-level data mean and variance statistics — calc_ALD_stats","title":"Aggregate-level data mean and variance statistics — calc_ALD_stats","text":"Computes mean variance marginal treatment effects aggregate-level trial data.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_ALD_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate-level data mean and variance statistics — calc_ALD_stats","text":"","code":"calc_ALD_stats(strategy, ald, treatments = list(\"B\", \"C\"), scale)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_ALD_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate-level data mean and variance statistics — calc_ALD_stats","text":"strategy list containing strategy details, including family distribution. ald Aggregate-level trial data treatments Treatment labels list; default B, C (common; e.g. placebo) scale scaling parameter calculation.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_ALD_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate-level data mean and variance statistics — calc_ALD_stats","text":"list containing: mean marginal treatment effect mean. var marginal treatment effect variance.","code":""},{"path":[]},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_ALD_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate-level data mean and variance statistics — calc_ALD_stats","text":"","code":"if (FALSE) { # \\dontrun{ strategy <- list(family = list(family = \"binomial\"))  # basic version ald <- data.frame(trial = 1:5,                   n_B = c(10, 20, 15, 30, 25),                   n_C = c(12, 18, 20, 25, 22)) calc_ALD_stats(strategy, ald, treatments = list(\"B\", \"C\"), scale = \"log\") } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_gcomp_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"G-computation Maximum Likelihood Bootstrap — calc_gcomp_ml","title":"G-computation Maximum Likelihood Bootstrap — calc_gcomp_ml","text":"Computes mean difference treatment effects using bootstrap resampling.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_gcomp_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"G-computation Maximum Likelihood Bootstrap — calc_gcomp_ml","text":"","code":"calc_gcomp_ml(strategy, ipd, ald)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_gcomp_ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"G-computation Maximum Likelihood Bootstrap — calc_gcomp_ml","text":"strategy list specifying model strategy, including: R Number bootstrap replications. formula linear regression formula object. family family object specifying distribution link function (e.g., binomial). N Synthetic sample size g-computation. ipd Individual patient data. ald Aggregate-level data.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_gcomp_ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"G-computation Maximum Likelihood Bootstrap — calc_gcomp_ml","text":"list containing: mean_A Bootstrap estimates treatment group . mean_C Bootstrap estimates treatment group C.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_gcomp_ml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"G-computation Maximum Likelihood Bootstrap — calc_gcomp_ml","text":"","code":"if (FALSE) { # \\dontrun{ strategy <- list(   R = 1000,   formula = outcome ~ treatment + age,   family = binomial(),   trt_var = \"treatment\",   N = 1000 ) ipd <- data.frame(treatment = c(0, 1), outcome = c(1, 0), age = c(30, 40)) ald <- data.frame() calc_gcomp_ml(strategy, ipd, ald) } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_gcomp_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"G-computation using Stan — calc_gcomp_stan","title":"G-computation using Stan — calc_gcomp_stan","text":"Calculate draws binary responses posterior predictive distribution Bayesian G-computation method using Hamiltonian Monte Carlo.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_gcomp_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"G-computation using Stan — calc_gcomp_stan","text":"","code":"calc_gcomp_stan(strategy, ipd, ald, ref_trt = \"C\", comp_trt = \"A\", ...)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_gcomp_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"G-computation using Stan — calc_gcomp_stan","text":"strategy list specifying model strategy, including: formula linear regression formula object. family family object specifying distribution link function (e.g., binomial). iter Number iterations MCMC sampling. warmup Number warmup iterations MCMC sampling. chains Number MCMC chains. ipd Individual-level patient data. Dataframe one row per patient outcome, treatment covariate columns. ald Aggregate-level data. Single row matrix summary statistics covariate treatment outcomes. format 'mean.' 'sd.' covariates 'y..sum', 'y..bar', 'y.*.sd' treatments B C. assume common distribution treatment arm.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_gcomp_stan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"G-computation using Stan — calc_gcomp_stan","text":"list \\(y^*_A\\) \\(y^*_C\\) posterior predictions: `0` Posterior means treatment group C. `1` Posterior means treatment group .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_gcomp_stan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"G-computation using Stan — calc_gcomp_stan","text":"","code":"if (FALSE) { # \\dontrun{ strategy <- list(   formula = outcome ~ treatment + age,   family = binomial(),   iter = 2000,   warmup = 500,   chains = 4 ) ipd <- data.frame(treatment = c(0, 1), outcome = c(1, 0), age = c(30, 40)) ald <- data.frame() calc_gcomp_stan(strategy, ipd, ald) } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_IPD_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate individual-level patient data statistics — calc_IPD_stats","title":"Calculate individual-level patient data statistics — calc_IPD_stats","text":"Computes mean variance statistics individual-level patient data using various approaches, including Matching-Adjusted Indirect Comparison (MAIC), Simulated Treatment Comparison (STC), G-computation via Maximum Likelihood Estimation (MLE) Bayesian inference.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_IPD_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate individual-level patient data statistics — calc_IPD_stats","text":"","code":"calc_IPD_stats(strategy, ipd, ald, scale, ...)  # Default S3 method calc_IPD_stats(...)  # S3 method for class 'mim' calc_IPD_stats(strategy, ipd, ald, scale, ...)  # S3 method for class 'stc' calc_IPD_stats(strategy, ipd, ald, scale, var_method = \"sample\", ...)  # S3 method for class 'maic' calc_IPD_stats(strategy, ipd, ald, scale, var_method = \"sample\", ...)  # S3 method for class 'gcomp_ml' calc_IPD_stats(strategy, ipd, ald, scale, var_method = \"sample\", ...)  # S3 method for class 'gcomp_stan' calc_IPD_stats(strategy, ipd, ald, scale, var_method = \"sample\", ...)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_IPD_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate individual-level patient data statistics — calc_IPD_stats","text":"strategy list corresponding different approaches ipd Individual-level patient data. Dataframe one row per patient outcome, treatment covariate columns. ald Aggregate-level data. Single row matrix summary statistics covariate treatment outcomes. format 'mean.' 'sd.' covariates 'y..sum', 'y..bar', 'y.*.sd' treatments B C. assume common distribution treatment arm. scale scaling parameter effect calculation. ... Additional arguments","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_IPD_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate individual-level patient data statistics — calc_IPD_stats","text":"list containing: mean Estimated mean treatment effect. var Estimated variance treatment effect.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_IPD_stats.html","id":"multiple-imputation-marginalisation","dir":"Reference","previous_headings":"","what":"Multiple imputation marginalisation","title":"Calculate individual-level patient data statistics — calc_IPD_stats","text":"Using Stan, compute marginal relative treatment effect vs C MCMC sample transforming probability linear predictor scale. Approximate using imputation combining estimates using Rubin's rules, contrast calc_IPD_stats.gcomp_stan().","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_IPD_stats.html","id":"simulated-treatment-comparison-statistics","dir":"Reference","previous_headings":"","what":"Simulated treatment comparison statistics","title":"Calculate individual-level patient data statistics — calc_IPD_stats","text":"IPD AC trial used fit regression model describing observed outcomes \\(y\\) terms relevant baseline characteristics \\(x\\) treatment variable \\(z\\).","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_IPD_stats.html","id":"matching-adjusted-indirect-comparison-statistics","dir":"Reference","previous_headings":"","what":"Matching-adjusted indirect comparison statistics","title":"Calculate individual-level patient data statistics — calc_IPD_stats","text":"Marginal vs C treatment effect estimates using bootstrapping sampling.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_IPD_stats.html","id":"g-computation-maximum-likelihood-statistics","dir":"Reference","previous_headings":"","what":"G-computation maximum likelihood statistics","title":"Calculate individual-level patient data statistics — calc_IPD_stats","text":"Compute non-parametric bootstrap default \\(R=1000\\) resamples.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_IPD_stats.html","id":"g-computation-bayesian-statistics","dir":"Reference","previous_headings":"","what":"G-computation Bayesian statistics","title":"Calculate individual-level patient data statistics — calc_IPD_stats","text":"Using Stan, compute marginal log-odds ratio vs C MCMC sample transforming probability linear predictor scale.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_IPD_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate individual-level patient data statistics — calc_IPD_stats","text":"","code":"if (FALSE) { # \\dontrun{ strategy <- strategy_maic() ipd <- data.frame(id = 1:100, treatment = sample(c(\"A\", \"C\"), 100, replace = TRUE), outcome = rnorm(100)) ald <- data.frame(treatment = c(\"A\", \"C\"), mean = c(0.2, 0.1), var = c(0.05, 0.03)) calc_IPD_stats(strategy, ipd, ald, scale = \"log_odds\") } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_mim.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple imputation marginalization (MIM) — calc_mim","title":"Multiple imputation marginalization (MIM) — calc_mim","text":"Multiple imputation marginalization (MIM)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_mim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple imputation marginalization (MIM) — calc_mim","text":"","code":"calc_mim(strategy, ipd, ald, ref_trt = \"C\", comp_trt = \"A\", ...)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_mim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple imputation marginalization (MIM) — calc_mim","text":"strategy Strategy object ipd Individual-level patient data. Dataframe one row per patient outcome, treatment covariate columns. ald Aggregate-level data. Single row matrix summary statistics covariate treatment outcomes. format 'mean.' 'sd.' covariates 'y..sum', 'y..bar', 'y.*.sd' treatments B C. assume common distribution treatment arm. ... Argument pass Stan model","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_stc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate simulated treatment comparison statistics — calc_stc","title":"Calculate simulated treatment comparison statistics — calc_stc","text":"Calculate simulated treatment comparison statistics","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/calc_stc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate simulated treatment comparison statistics — calc_stc","text":"","code":"calc_stc(strategy, ipd, ...)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/cor2cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute covariance matrix — cor2cov","title":"Compute covariance matrix — cor2cov","text":"Compute covariance matrix","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/cor2cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute covariance matrix — cor2cov","text":"","code":"cor2cov(R, S)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/cor2cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute covariance matrix — cor2cov","text":"R correlation matrix S vector standard deviations covariance matrix","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/cor2cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute covariance matrix — cor2cov","text":"Required input mvrnorm.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Coverage estimate — coverage","title":"Coverage estimate — coverage","text":"Coverage estimate","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coverage estimate — coverage","text":"","code":"coverage(low, upp, theta)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coverage estimate — coverage","text":"low Low upp Upper theta Theta","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coverage estimate — coverage","text":"\\(sum(in_range)/nsim\\)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/coverage.mcse.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo SE of coverage estimate — coverage.mcse","title":"Monte Carlo SE of coverage estimate — coverage.mcse","text":"Monte Carlo SE coverage estimate","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/coverage.mcse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo SE of coverage estimate — coverage.mcse","text":"","code":"coverage.mcse(coverage, nsim)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/coverage.mcse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo SE of coverage estimate — coverage.mcse","text":"coverage Coverage nsim Number simulations","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/coverage.mcse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo SE of coverage estimate — coverage.mcse","text":"\\(sqrt((coverage*(1 - coverage))/nsim)\\)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/empse.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical standard error — empse","title":"Empirical standard error — empse","text":"Empirical standard error","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/empse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical standard error — empse","text":"","code":"empse(theta.hat)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/empse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical standard error — empse","text":"theta.hat Theta","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/empse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical standard error — empse","text":"\\(sqrt(tmp/(nsim-1))\\)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/empse.mcse.html","id":null,"dir":"Reference","previous_headings":"","what":"EmpSE MCSE — empse.mcse","title":"EmpSE MCSE — empse.mcse","text":"EmpSE MCSE","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/empse.mcse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EmpSE MCSE — empse.mcse","text":"","code":"empse.mcse(empse, nsim)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/empse.mcse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EmpSE MCSE — empse.mcse","text":"empse EMPSE nsim Number simulations","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/empse.mcse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EmpSE MCSE — empse.mcse","text":"\\(empse/(sqrt(2*(nsim-1)))\\)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/estimate_var_sandwich.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Variance Sandwich Estimator — estimate_var_sandwich","title":"Estimate Variance Sandwich Estimator — estimate_var_sandwich","text":"Estimate Variance Sandwich Estimator","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/estimate_var_sandwich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Variance Sandwich Estimator — estimate_var_sandwich","text":"","code":"estimate_var_sandwich(strategy, ipd_data, ...)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/find_conversion_path.html","id":null,"dir":"Reference","previous_headings":"","what":"recursive function to find conversion path — find_conversion_path","title":"recursive function to find conversion path — find_conversion_path","text":"recursive function find conversion path","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/find_conversion_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"recursive function to find conversion path — find_conversion_path","text":"","code":"find_conversion_path(from, to, visited = c())"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/find_conversion_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"recursive function to find conversion path — find_conversion_path","text":"","code":"find_conversion_path(\"log_odds\", \"relative_risk\") #> Error in find_conversion_path(\"log_odds\", \"relative_risk\"): could not find function \"find_conversion_path\""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"G-computation maximum likelihood bootstrap — gcomp_ml.boot","title":"G-computation maximum likelihood bootstrap — gcomp_ml.boot","text":"Using bootstrap resampling, calculates log odds ratio.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"G-computation maximum likelihood bootstrap — gcomp_ml.boot","text":"","code":"gcomp_ml.boot(   data,   indices,   R,   formula = NULL,   family,   trt_var,   ref_trt = \"C\",   comp_trt = \"A\",   rho = NA,   N = 1000,   ald )"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"G-computation maximum likelihood bootstrap — gcomp_ml.boot","text":"data Trial data indices Indices sampled rows data formula Linear regression formula object. Prognostic factors (PF) main effects effect modifiers (EM) interactions treatment variable, .e., y ~ X1 + trt + trt:X2. covariates PF EM use * syntax. family 'family' object specifying distribution link function (e.g., 'binomial'). See stats::family() details. rho named square matrix covariate correlations; default NA. N Synthetic sample size g-computation ald Aggregate-level data covariates.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml.boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"G-computation maximum likelihood bootstrap — gcomp_ml.boot","text":"Mean difference expected log-odds","code":""},{"path":[]},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml.boot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"G-computation maximum likelihood bootstrap — gcomp_ml.boot","text":"","code":"if (FALSE) { # \\dontrun{ data <- data.frame(treatment = c(0, 1), outcome = c(1, 0)) gcomp_ml.boot(data, indices = 1:2, formula = outcome ~ treatment,               R = 100, family = binomial(), N = 1000, ald = NULL) } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml_log_odds_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"G-computation Maximum Likelihood Log-Odds Ratio — gcomp_ml_log_odds_ratio","title":"G-computation Maximum Likelihood Log-Odds Ratio — gcomp_ml_log_odds_ratio","text":"Marginal vs C log-odds ratio (mean difference expected log-odds) estimated transforming probability linear predictor scale.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml_log_odds_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"G-computation Maximum Likelihood Log-Odds Ratio — gcomp_ml_log_odds_ratio","text":"","code":"gcomp_ml_log_odds_ratio(formula, ipd, ald)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml_log_odds_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"G-computation Maximum Likelihood Log-Odds Ratio — gcomp_ml_log_odds_ratio","text":"formula Linear regression formula object ipd Individual-level data ald Aggregate-level data","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml_log_odds_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"G-computation Maximum Likelihood Log-Odds Ratio — gcomp_ml_log_odds_ratio","text":"Difference log-odds","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml_log_odds_ratio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"G-computation Maximum Likelihood Log-Odds Ratio — gcomp_ml_log_odds_ratio","text":"\\(\\log(\\hat{\\mu}_A/(1 - \\hat{\\mu}_A)) - \\log(\\hat{\\mu}_C/(1 - \\hat{\\mu}_C))\\)","code":""},{"path":[]},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml_means.html","id":null,"dir":"Reference","previous_headings":"","what":"G-computation Maximum Likelihood mean outcome — gcomp_ml_means","title":"G-computation Maximum Likelihood mean outcome — gcomp_ml_means","text":"G-computation Maximum Likelihood mean outcome","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"G-computation Maximum Likelihood mean outcome — gcomp_ml_means","text":"","code":"gcomp_ml_means(   formula,   family,   ipd,   ald,   trt_var,   rho = NA,   N = 1000,   ref_trt = \"C\",   comp_trt = \"A\" )"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"G-computation Maximum Likelihood mean outcome — gcomp_ml_means","text":"formula Linear regression formula object. Prognostic factors (PF) main effects effect modifiers (EM) interactions treatment variable, .e., y ~ X1 + trt + trt:X2. covariates PF EM use * syntax. family 'family' object specifying distribution link function (e.g., 'binomial'). See stats::family() details. ipd Individual-level patient data. Dataframe one row per patient outcome, treatment covariate columns. ald Aggregate-level data. Single row matrix summary statistics covariate treatment outcomes. format 'mean.' 'sd.' covariates 'y..sum', 'y..bar', 'y.*.sd' treatments B C. assume common distribution treatment arm. rho named square matrix covariate correlations; default NA. N Synthetic sample size g-computation","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml_means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"G-computation Maximum Likelihood mean outcome — gcomp_ml_means","text":"named vector containing marginal mean probabilities treatments (0) C (1).","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml_means.html","id":"log-odds-ratio","dir":"Reference","previous_headings":"","what":"Log-Odds Ratio","title":"G-computation Maximum Likelihood mean outcome — gcomp_ml_means","text":"Marginal vs C log-odds ratio (mean difference expected log-odds) estimated transforming probability linear predictor scale. \\(\\log(\\hat{\\mu}_A/(1 - \\hat{\\mu}_A)) - \\log(\\hat{\\mu}_C/(1 - \\hat{\\mu}_C))\\)","code":""},{"path":[]},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_ml_means.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"G-computation Maximum Likelihood mean outcome — gcomp_ml_means","text":"","code":"if (FALSE) { # \\dontrun{ formula <- outcome ~ treatment family <- binomial() ipd <- data.frame(treatment = c(0, 1), outcome = c(1, 0)) ald <- data.frame() gcomp_ml_means(formula, family, N = 1000, ipd = ipd, ald = ald) } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"G-computation using Stan — gcomp_stan","title":"G-computation using Stan — gcomp_stan","text":"Calculate draws binary responses posterior predictive distribution Bayesian G-computation method using Hamiltonian Monte Carlo.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"G-computation using Stan — gcomp_stan","text":"","code":"gcomp_stan(formula = NULL, ipd, ald)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"G-computation using Stan — gcomp_stan","text":"formula Linear regression formula object ipd Individual-level data ald Aggregate-level data","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gcomp_stan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"G-computation using Stan — gcomp_stan","text":"list \\(y^*_A\\) \\(y^*_C\\) posterior predictions","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gen_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate simulated datasets of IPD covariates and binary outcome for a trial — gen_data","title":"Generate simulated datasets of IPD covariates and binary outcome for a trial — gen_data","text":"Generate simulated datasets IPD covariates binary outcome trial","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gen_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate simulated datasets of IPD covariates and binary outcome for a trial — gen_data","text":"","code":"gen_data(   N,   b_trt,   b_X,   b_EM,   b_0,   meanX_EM,   sdX_EM,   meanX,   sdX,   corX,   allocation,   family = binomial(\"logit\") )"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gen_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate simulated datasets of IPD covariates and binary outcome for a trial — gen_data","text":"N Total number patients b_trt b coefficient active treatment vs. common comparator b_X b coefficients prognostic variable X b_EM b coefficients effect modifiers b_0 Intercept coefficient meanX Mean normally-distributed covariate X sdX Standard deviation covariate X corX Covariate correlation coefficient X allocation Allocation active treatment proportion total; 0 1 event_rate Event rate","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gen_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate simulated datasets of IPD covariates and binary outcome for a trial — gen_data","text":"Data frame X, trt y","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/gen_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate simulated datasets of IPD covariates and binary outcome for a trial — gen_data","text":"","code":"if (FALSE) { # \\dontrun{ x <- gen_data(  N = 100,  b_trt = log(0.17),  b_X = -log(0.5),  b_EM = -log(0.67),  b_0 = -0.62,  meanX = 0.6,  sdX = 0.4,  event_rate = 0.35,   corX = 0.2,  allocation = 2/3)   head(x) } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_covariate_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get covariate names — get_covariate_names","title":"Get covariate names — get_covariate_names","text":"Get covariate names","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_covariate_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get covariate names — get_covariate_names","text":"","code":"get_covariate_names(formula)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_covariate_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get covariate names — get_covariate_names","text":"formula Linear regression formula object. Prognostic factors (PF) main effects effect modifiers (EM) interactions treatment variable, .e., y ~ X1 + trt + trt:X2. covariates PF EM use * syntax.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_covariate_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get covariate names — get_covariate_names","text":"covariate names vector","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_effect_modifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get effect modifiers — get_effect_modifiers","title":"Get effect modifiers — get_effect_modifiers","text":"Get effect modifiers","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_effect_modifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get effect modifiers — get_effect_modifiers","text":"","code":"get_effect_modifiers(formula)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_effect_modifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get effect modifiers — get_effect_modifiers","text":"formula Linear regression formula string","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_effect_modifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get effect modifiers — get_effect_modifiers","text":"Effect modifiers names","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_eff_mod_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get effect modifiers — get_eff_mod_names","title":"Get effect modifiers — get_eff_mod_names","text":"Get effect modifiers","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_eff_mod_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get effect modifiers — get_eff_mod_names","text":"","code":"get_eff_mod_names(formula, trt_var = \"trt\")"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_eff_mod_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get effect modifiers — get_eff_mod_names","text":"formula Linear regression formula object. Prognostic factors (PF) main effects effect modifiers (EM) interactions treatment variable, .e., y ~ X1 + trt + trt:X2. covariates PF EM use * syntax. trt_var Treatment variable name; Default 'trt'.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_eff_mod_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get effect modifiers — get_eff_mod_names","text":"Effect modifiers names","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_mean_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mean names — get_mean_names","title":"Get mean names — get_mean_names","text":"Get mean names","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_mean_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mean names — get_mean_names","text":"","code":"get_mean_names(ald, keep_nms)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_mean_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mean names — get_mean_names","text":"ald Aggregate-level data. Single row matrix summary statistics covariate treatment outcomes. format 'mean.' 'sd.' covariates 'y..sum', 'y..bar', 'y.*.sd' treatments B C. assume common distribution treatment arm. keep_nms Variable names character vector","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_mean_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mean names — get_mean_names","text":"Mean names vector","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_sd_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get standard deviation names — get_sd_names","title":"Get standard deviation names — get_sd_names","text":"Get standard deviation names","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_sd_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get standard deviation names — get_sd_names","text":"","code":"get_sd_names(ald, keep_nms)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_sd_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get standard deviation names — get_sd_names","text":"ald Aggregate-level data. Single row matrix summary statistics covariate treatment outcomes. format 'mean.' 'sd.' covariates 'y..sum', 'y..bar', 'y.*.sd' treatments B C. assume common distribution treatment arm. keep_nms Variable names character vector","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_sd_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get standard deviation names — get_sd_names","text":"Standard deviation names vector","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_treatment_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Get treatment effect scale corresponding to a link function — get_treatment_effect","title":"Get treatment effect scale corresponding to a link function — get_treatment_effect","text":"Maps given link function corresponding treatment effect scale.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_treatment_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get treatment effect scale corresponding to a link function — get_treatment_effect","text":"","code":"get_treatment_effect(link)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_treatment_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get treatment effect scale corresponding to a link function — get_treatment_effect","text":"link character string specifying link function. Options : \"logit\" Log-odds scale. \"identity\" Risk difference. \"probit\" Probit scale. \"cloglog\" Log relative risk rare events. \"log\" Log relative risk.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_treatment_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get treatment effect scale corresponding to a link function — get_treatment_effect","text":"character string representing treatment effect scale.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_treatment_effect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get treatment effect scale corresponding to a link function — get_treatment_effect","text":"","code":"if (FALSE) { # \\dontrun{ get_treatment_effect(link = \"logit\") get_treatment_effect(link = \"identity\") } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_treatment_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get treatment name — get_treatment_name","title":"Get treatment name — get_treatment_name","text":"Get treatment name","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_treatment_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get treatment name — get_treatment_name","text":"","code":"get_treatment_name(formula)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_treatment_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get treatment name — get_treatment_name","text":"formula Linear regression formula string","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/get_treatment_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get treatment name — get_treatment_name","text":"Treatment name","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/guess_treatment_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess treatment name — guess_treatment_name","title":"Guess treatment name — guess_treatment_name","text":"variable appear interactions? pick first LHS interaction term. Finally, interactions pick last main effect term.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/guess_treatment_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guess treatment name — guess_treatment_name","text":"","code":"guess_treatment_name(formula)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/guess_treatment_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guess treatment name — guess_treatment_name","text":"formula Linear regression formula object. Prognostic factors (PF) main effects effect modifiers (EM) interactions treatment variable, .e., y ~ X1 + trt + trt:X2. covariates PF EM use * syntax.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/guess_treatment_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guess treatment name — guess_treatment_name","text":"Treatment name","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/hat_Delta_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the difference between treatments using all evidence — hat_Delta_stats","title":"Calculate the difference between treatments using all evidence — hat_Delta_stats","text":"main, top-level wrapper hat_Delta_stats(). Methods taken (Remiro‐Azócar et al. 2022) .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/hat_Delta_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the difference between treatments using all evidence — hat_Delta_stats","text":"","code":"hat_Delta_stats(AC.IPD, BC.ALD, strategy, CI = 0.95, ...)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/hat_Delta_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the difference between treatments using all evidence — hat_Delta_stats","text":"AC.IPD Individual-level patient data. Suppose studies C. BC.ALD Aggregate-level data. Suppose studies B C. strategy Computation strategy function. can strategy_maic(), strategy_stc(), strategy_gcomp_ml()  strategy_gcomp_stan() CI Confidence interval; 0,1 ... Additional arguments","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/hat_Delta_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the difference between treatments using all evidence — hat_Delta_stats","text":"List length 3 statistics mimR class object. Containing statistics pair treatments. mean contrasts, variances confidence intervals, respectively.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/hat_Delta_stats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the difference between treatments using all evidence — hat_Delta_stats","text":"Remiro‐Azócar , Heath , Baio G (2022). “Parametric G‐computation compatible indirect treatment comparisons limited individual patient data.” Res. Synth. Methods, 1--31. ISSN 1759-2879, doi:10.1002/jrsm.1565 , 2108.12208.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/hat_Delta_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the difference between treatments using all evidence — hat_Delta_stats","text":"","code":"data(AC_IPD)  # AC patient-level data data(BC_ALD)  # BC aggregate-level data  # matching-adjusted indirect comparison hat_Delta_stats_maic <- hat_Delta_stats(AC_IPD, BC_ALD, strategy = strategy_maic())  # simulated treatment comparison hat_Delta_stats_stc <- hat_Delta_stats(AC_IPD, BC_ALD, strategy = strategy_stc())  # G-computation with maximum likelihood # hat_Delta_stats_gcomp_ml <- hat_Delta_stats(AC_IPD, BC_ALD, strategy = strategy_gcomp_ml())  # G-computation with Bayesian inference hat_Delta_stats_gcomp_stan <- hat_Delta_stats(AC_IPD, BC_ALD, strategy = strategy_gcomp_stan()) #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 3.6e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.36 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 1: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 1: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 1: Iteration: 1200 / 4000 [ 30%]  (Warmup) #> Chain 1: Iteration: 1600 / 4000 [ 40%]  (Warmup) #> Chain 1: Iteration: 2000 / 4000 [ 50%]  (Warmup) #> Chain 1: Iteration: 2001 / 4000 [ 50%]  (Sampling) #> Chain 1: Iteration: 2400 / 4000 [ 60%]  (Sampling) #> Chain 1: Iteration: 2800 / 4000 [ 70%]  (Sampling) #> Chain 1: Iteration: 3200 / 4000 [ 80%]  (Sampling) #> Chain 1: Iteration: 3600 / 4000 [ 90%]  (Sampling) #> Chain 1: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.481 seconds (Warm-up) #> Chain 1:                0.592 seconds (Sampling) #> Chain 1:                1.073 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 1.7e-05 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.17 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 2: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 2: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 2: Iteration: 1200 / 4000 [ 30%]  (Warmup) #> Chain 2: Iteration: 1600 / 4000 [ 40%]  (Warmup) #> Chain 2: Iteration: 2000 / 4000 [ 50%]  (Warmup) #> Chain 2: Iteration: 2001 / 4000 [ 50%]  (Sampling) #> Chain 2: Iteration: 2400 / 4000 [ 60%]  (Sampling) #> Chain 2: Iteration: 2800 / 4000 [ 70%]  (Sampling) #> Chain 2: Iteration: 3200 / 4000 [ 80%]  (Sampling) #> Chain 2: Iteration: 3600 / 4000 [ 90%]  (Sampling) #> Chain 2: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.514 seconds (Warm-up) #> Chain 2:                0.521 seconds (Sampling) #> Chain 2:                1.035 seconds (Total) #> Chain 2:"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate individual-level patient data statistics — IPD_stats","title":"Calculate individual-level patient data statistics — IPD_stats","text":"Computes mean variance statistics individual-level patient data using various approaches, including Matching-Adjusted Indirect Comparison (MAIC), Simulated Treatment Comparison (STC), G-computation via Maximum Likelihood Estimation (MLE) Bayesian inference.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate individual-level patient data statistics — IPD_stats","text":"","code":"IPD_stats(strategy, ipd, ald, scale, ...)  # Default S3 method IPD_stats(...)  # S3 method for class 'mim' IPD_stats(strategy, ipd, ald, scale, ...)  # S3 method for class 'stc' IPD_stats(strategy, ipd, ald, scale, ...)  # S3 method for class 'maic' IPD_stats(strategy, ipd, ald, scale, ...)  # S3 method for class 'gcomp_ml' IPD_stats(strategy, ipd, ald, scale, ...)  # S3 method for class 'gcomp_stan' IPD_stats(strategy, ipd, ald, scale, ...)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate individual-level patient data statistics — IPD_stats","text":"strategy list corresponding different approaches ipd Individual-level data ald Aggregate-level data scale scaling parameter effect calculation. ... Additional arguments","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate individual-level patient data statistics — IPD_stats","text":"list containing: mean Estimated mean treatment effect. var Estimated variance treatment effect.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stats.html","id":"multiple-imputation-marginalisation","dir":"Reference","previous_headings":"","what":"Multiple imputation marginalisation","title":"Calculate individual-level patient data statistics — IPD_stats","text":"Using Stan, compute marginal relative treatment effect vs C MCMC sample transforming probability linear predictor scale. Approximate using imputation combining estimates using Rubin's rules, contrast IPD_stats.gcomp_stan().","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stats.html","id":"simulated-treatment-comparison-statistics","dir":"Reference","previous_headings":"","what":"Simulated treatment comparison statistics","title":"Calculate individual-level patient data statistics — IPD_stats","text":"IPD AC trial used fit regression model describing observed outcomes \\(y\\) terms relevant baseline characteristics \\(x\\) treatment variable \\(z\\).","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stats.html","id":"matching-adjusted-indirect-comparison-statistics","dir":"Reference","previous_headings":"","what":"Matching-adjusted indirect comparison statistics","title":"Calculate individual-level patient data statistics — IPD_stats","text":"Marginal vs C treatment effect estimates using bootstrapping sampling.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stats.html","id":"g-computation-maximum-likelihood-statistics","dir":"Reference","previous_headings":"","what":"G-computation maximum likelihood statistics","title":"Calculate individual-level patient data statistics — IPD_stats","text":"Compute non-parametric bootstrap default \\(R=1000\\) resamples.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stats.html","id":"g-computation-bayesian-statistics","dir":"Reference","previous_headings":"","what":"G-computation Bayesian statistics","title":"Calculate individual-level patient data statistics — IPD_stats","text":"Using Stan, compute marginal log-odds ratio vs C MCMC sample transforming probability linear predictor scale.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate individual-level patient data statistics — IPD_stats","text":"","code":"if (FALSE) { # \\dontrun{ strategy <- strategy_maic() ipd <- data.frame(id = 1:100, treatment = sample(c(\"A\", \"C\"), 100, replace = TRUE), outcome = rnorm(100)) ald <- data.frame(treatment = c(\"A\", \"C\"), mean = c(0.2, 0.1), var = c(0.05, 0.03)) IPD_stats(strategy, ipd, ald, scale = \"log\") } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stat_factory.html","id":null,"dir":"Reference","previous_headings":"","what":"Factory function for creating calc_IPD_stats methods — IPD_stat_factory","title":"Factory function for creating calc_IPD_stats methods — IPD_stat_factory","text":"Creates method computing mean variance statistics based supplied function.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stat_factory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factory function for creating calc_IPD_stats methods — IPD_stat_factory","text":"","code":"IPD_stat_factory(ipd_fun)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stat_factory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factory function for creating calc_IPD_stats methods — IPD_stat_factory","text":"ipd_fun function computes mean variance statistics individual-level patient data.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/IPD_stat_factory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factory function for creating calc_IPD_stats methods — IPD_stat_factory","text":"function computes mean variance statistics given strategy.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mae.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean absolute error estimate — mae","title":"Mean absolute error estimate — mae","text":"Mean absolute error estimate","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean absolute error estimate — mae","text":"","code":"mae(theta.hat, theta)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean absolute error estimate — mae","text":"theta.hat Theta hat theta Theta","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean absolute error estimate — mae","text":"\\(sum(abs(theta.hat - theta))/nsim\\)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/maic.boot.html","id":null,"dir":"Reference","previous_headings":"","what":"MAIC bootstrap sample — maic.boot","title":"MAIC bootstrap sample — maic.boot","text":"Matching-adjusted indirect comparison bootstrap sampling.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/maic.boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MAIC bootstrap sample — maic.boot","text":"","code":"maic.boot(   ipd,   indices = 1:nrow(ipd),   formula,   family,   ald,   trt_var,   hat_w = NULL )"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/maic.boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MAIC bootstrap sample — maic.boot","text":"ipd Individual-level patient data. Dataframe one row per patient outcome, treatment covariate columns. indices Vector indices, length original, define bootstrap sample formula Linear regression formula object. Prognostic factors (PF) main effects effect modifiers (EM) interactions treatment variable, .e., y ~ X1 + trt + trt:X2. covariates PF EM use * syntax. family 'family' object specifying distribution link function (e.g., 'binomial'). See stats::family() details. ald Aggregate-level data. Single row matrix summary statistics covariate treatment outcomes. format 'mean.' 'sd.' covariates 'y..sum', 'y..bar', 'y.*.sd' treatments B C. assume common distribution treatment arm. hat_w MAIC weights; default NULL calls maic_weights()","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/maic.boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MAIC bootstrap sample — maic.boot","text":"Vector fitted probabilities treatments C","code":""},{"path":[]},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/maic_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate MAIC weights — maic_weights","title":"Estimate MAIC weights — maic_weights","text":"Matching-adjusted indirect comparison weights. Method taken Signorovitch2010outstandR.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/maic_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate MAIC weights — maic_weights","text":"","code":"maic_weights(X_EM)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/maic_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate MAIC weights — maic_weights","text":"X_EM Centred \\(S=1\\) effect modifiers; matrix data frame","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/maic_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate MAIC weights — maic_weights","text":"Estimated weights individual; vector","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/maic_weights.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate MAIC weights — maic_weights","text":"Signorovitch2010outstandR","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/marginal_treatment_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal treatment effect from reported event counts — marginal_treatment_effect","title":"Marginal treatment effect from reported event counts — marginal_treatment_effect","text":"Computes relative treatment effect aggregate-level data using event counts. binomial data, calculates: $$ \\log\\left( \\frac{n_B/(N_B-n_B)}{n_C/(N_B-n_{B})} \\right) = \\log(n_B n_{\\bar{C}}) - \\log(n_C n_{\\bar{B}}) $$ \\(\\bar{C}\\) compliment \\(C\\) e.g. \\(n_{\\bar{C}} = N_C - n_c\\).","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/marginal_treatment_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal treatment effect from reported event counts — marginal_treatment_effect","text":"","code":"marginal_treatment_effect(ald, treatments = list(\"B\", \"C\"), scale, family)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/marginal_treatment_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal treatment effect from reported event counts — marginal_treatment_effect","text":"ald Aggregate-level data treatments list treatment labels. Last variable reference; default B, C (common; e.g. placebo) scale scaling parameter calculation. family character string specifying family distribution (e.g., \"binomial\").","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/marginal_treatment_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginal treatment effect from reported event counts — marginal_treatment_effect","text":"relative treatment effect.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/marginal_treatment_effect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marginal treatment effect from reported event counts — marginal_treatment_effect","text":"","code":"if (FALSE) { # \\dontrun{ ald <- data.frame(trial = 1:5, n_B = c(10, 20, 15, 30, 25), n_C = c(12, 18, 20, 25, 22)) marginal_treatment_effect(ald, treatments = list(\"B\", \"C\"), scale = \"log\", family = \"binomial\") } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/marginal_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal effect variance using the delta method — marginal_variance","title":"Marginal effect variance using the delta method — marginal_variance","text":"Computes total variance marginal treatment effects using delta method. binomial data, calculates: $$\\frac{1}{n_C} + \\frac{1}{n_{\\bar{C}}} + \\frac{1}{n_B} + \\frac{1}{n_{\\bar{B}}}$$.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/marginal_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal effect variance using the delta method — marginal_variance","text":"","code":"marginal_variance(ald, treatments = list(\"B\", \"C\"), scale, family)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/marginal_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal effect variance using the delta method — marginal_variance","text":"ald Aggregate-level data treatments list treatment labels; default B vs C scale scaling parameter calculation. family character string specifying family distribution (e.g., \"binomial\").","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/marginal_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginal effect variance using the delta method — marginal_variance","text":"total variance marginal treatment effects.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/marginal_variance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marginal effect variance using the delta method — marginal_variance","text":"","code":"if (FALSE) { # \\dontrun{ ald <- data.frame(trial = 1:5, n_B = c(10, 20, 15, 30, 25), n_C = c(12, 18, 20, 25, 22)) marginal_variance(ald, treatments = list(\"B\", \"C\"), scale = \"log\", family = \"binomial\") } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mcse.estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo SE of any continuous performance metric — mcse.estimate","title":"Monte Carlo SE of any continuous performance metric — mcse.estimate","text":"Monte Carlo SE continuous performance metric","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mcse.estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo SE of any continuous performance metric — mcse.estimate","text":"","code":"mcse.estimate(pm)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mcse.estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo SE of any continuous performance metric — mcse.estimate","text":"pm pm","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mcse.estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo SE of any continuous performance metric — mcse.estimate","text":"\\(sqrt(sum((pm - pm_mean)^2)/(nsim*(nsim-1)))\\)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mim.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple imputation marginalization (MIM) — mim","title":"Multiple imputation marginalization (MIM) — mim","text":"Multiple imputation marginalization (MIM)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple imputation marginalization (MIM) — mim","text":"","code":"mim(formula, ipd, ald, M = 1000, n.chains = 2, warmup = 1000, iters = 4000)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple imputation marginalization (MIM) — mim","text":"ipd Individual-level data ald Aggregate-level data M Number syntheses used analysis stage (high low Monte Carlo error)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mimR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the difference between treatments using all evidence — mimR","title":"Calculate the difference between treatments using all evidence — mimR","text":"main, top-level wrapper {mimR}. Methods taken (Remiro‐Azócar et al. 2022) .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mimR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the difference between treatments using all evidence — mimR","text":"","code":"mimR(AC.IPD, BC.ALD, strategy, CI = 0.95, ...)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mimR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the difference between treatments using all evidence — mimR","text":"AC.IPD Individual-level patient data. Suppose studies C. BC.ALD Aggregate-level data. Suppose studies B C. strategy Computation strategy function. can strategy_maic(), strategy_stc(), strategy_gcomp_ml()  strategy_gcomp_stan() CI Confidence interval; 0,1 ... Additional arguments","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mimR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the difference between treatments using all evidence — mimR","text":"List length 3 statistics mimR class object. Containing statistics pair treatments. mean contrasts, variances confidence intervals, respectively.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mimR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the difference between treatments using all evidence — mimR","text":"Remiro‐Azócar , Heath , Baio G (2022). “Parametric G‐computation compatible indirect treatment comparisons limited individual patient data.” Res. Synth. Methods, 1--31. ISSN 1759-2879, doi:10.1002/jrsm.1565 , 2108.12208.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mimR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the difference between treatments using all evidence — mimR","text":"","code":"data(AC_IPD)  # AC patient-level data data(BC_ALD)  # BC aggregate-level data  lin_form <- as.formula(\"y ~ X3 + X4 + trt*X1 + trt*X2\")  # matching-adjusted indirect comparison mimR_maic <- mimR(AC_IPD, BC_ALD, strategy = strategy_maic(formula = lin_form))  # simulated treatment comparison mimR_stc <- mimR(AC_IPD, BC_ALD, strategy = strategy_stc(lin_form))  # G-computation with maximum likelihood # mimR_gcomp_ml <- mimR(AC_IPD, BC_ALD, strategy = strategy_gcomp_ml(lin_form))  # G-computation with Bayesian inference mimR_gcomp_stan <- mimR(AC_IPD, BC_ALD, strategy = strategy_gcomp_stan(lin_form)) #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 3.6e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.36 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 1: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 1: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 1: Iteration: 1200 / 4000 [ 30%]  (Warmup) #> Chain 1: Iteration: 1600 / 4000 [ 40%]  (Warmup) #> Chain 1: Iteration: 2000 / 4000 [ 50%]  (Warmup) #> Chain 1: Iteration: 2001 / 4000 [ 50%]  (Sampling) #> Chain 1: Iteration: 2400 / 4000 [ 60%]  (Sampling) #> Chain 1: Iteration: 2800 / 4000 [ 70%]  (Sampling) #> Chain 1: Iteration: 3200 / 4000 [ 80%]  (Sampling) #> Chain 1: Iteration: 3600 / 4000 [ 90%]  (Sampling) #> Chain 1: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.497 seconds (Warm-up) #> Chain 1:                0.516 seconds (Sampling) #> Chain 1:                1.013 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 1.6e-05 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.16 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 2: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 2: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 2: Iteration: 1200 / 4000 [ 30%]  (Warmup) #> Chain 2: Iteration: 1600 / 4000 [ 40%]  (Warmup) #> Chain 2: Iteration: 2000 / 4000 [ 50%]  (Warmup) #> Chain 2: Iteration: 2001 / 4000 [ 50%]  (Sampling) #> Chain 2: Iteration: 2400 / 4000 [ 60%]  (Sampling) #> Chain 2: Iteration: 2800 / 4000 [ 70%]  (Sampling) #> Chain 2: Iteration: 3200 / 4000 [ 80%]  (Sampling) #> Chain 2: Iteration: 3600 / 4000 [ 90%]  (Sampling) #> Chain 2: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.505 seconds (Warm-up) #> Chain 2:                0.564 seconds (Sampling) #> Chain 2:                1.069 seconds (Total) #> Chain 2:"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/ModStanR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the difference between treatments using all evidence — outstandR","title":"Calculate the difference between treatments using all evidence — outstandR","text":"main, top-level wrapper {outstandR}. Methods taken (Remiro‐Azócar et al. 2022) .","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/ModStanR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the difference between treatments using all evidence — outstandR","text":"","code":"outstandR(AC.IPD, BC.ALD, strategy, CI = 0.95, ...)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/ModStanR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the difference between treatments using all evidence — outstandR","text":"AC.IPD Individual-level patient data. Suppose studies C. BC.ALD Aggregate-level data. Suppose studies B C. strategy Computation strategy function. can strategy_maic(), strategy_stc(), strategy_gcomp_ml()  strategy_gcomp_stan() CI Confidence interval; 0,1 ... Additional arguments","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/ModStanR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the difference between treatments using all evidence — outstandR","text":"List length 3 statistics outstandR class object. Containing statistics pair treatments. mean contrasts, variances confidence intervals, respectively.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/ModStanR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the difference between treatments using all evidence — outstandR","text":"Remiro‐Azócar , Heath , Baio G (2022). “Parametric G‐computation compatible indirect treatment comparisons limited individual patient data.” Res. Synth. Methods, 1--31. ISSN 1759-2879, doi:10.1002/jrsm.1565 , 2108.12208.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/ModStanR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the difference between treatments using all evidence — outstandR","text":"","code":"data(AC_IPD)  # AC patient-level data data(BC_ALD)  # BC aggregate-level data  lin_form <- as.formula(\"y ~ X3 + X4 + trt*X1 + trt*X2\")  # matching-adjusted indirect comparison outstandR_maic <- outstandR(AC_IPD, BC_ALD, strategy = strategy_maic(formula = lin_form))  # simulated treatment comparison outstandR_stc <- outstandR(AC_IPD, BC_ALD, strategy = strategy_stc(lin_form))  # G-computation with maximum likelihood # outstandR_gcomp_ml <- outstandR(AC_IPD, BC_ALD, strategy = strategy_gcomp_ml(lin_form))  # G-computation with Bayesian inference outstandR_gcomp_stan <- outstandR(AC_IPD, BC_ALD, strategy = strategy_gcomp_stan(lin_form)) #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 7.1e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.71 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 1: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 1: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 1: Iteration: 1200 / 4000 [ 30%]  (Warmup) #> Chain 1: Iteration: 1600 / 4000 [ 40%]  (Warmup) #> Chain 1: Iteration: 2000 / 4000 [ 50%]  (Warmup) #> Chain 1: Iteration: 2001 / 4000 [ 50%]  (Sampling) #> Chain 1: Iteration: 2400 / 4000 [ 60%]  (Sampling) #> Chain 1: Iteration: 2800 / 4000 [ 70%]  (Sampling) #> Chain 1: Iteration: 3200 / 4000 [ 80%]  (Sampling) #> Chain 1: Iteration: 3600 / 4000 [ 90%]  (Sampling) #> Chain 1: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.71 seconds (Warm-up) #> Chain 1:                0.733 seconds (Sampling) #> Chain 1:                1.443 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'bernoulli' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 2.2e-05 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.22 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 4000 [  0%]  (Warmup) #> Chain 2: Iteration:  400 / 4000 [ 10%]  (Warmup) #> Chain 2: Iteration:  800 / 4000 [ 20%]  (Warmup) #> Chain 2: Iteration: 1200 / 4000 [ 30%]  (Warmup) #> Chain 2: Iteration: 1600 / 4000 [ 40%]  (Warmup) #> Chain 2: Iteration: 2000 / 4000 [ 50%]  (Warmup) #> Chain 2: Iteration: 2001 / 4000 [ 50%]  (Sampling) #> Chain 2: Iteration: 2400 / 4000 [ 60%]  (Sampling) #> Chain 2: Iteration: 2800 / 4000 [ 70%]  (Sampling) #> Chain 2: Iteration: 3200 / 4000 [ 80%]  (Sampling) #> Chain 2: Iteration: 3600 / 4000 [ 90%]  (Sampling) #> Chain 2: Iteration: 4000 / 4000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.73 seconds (Warm-up) #> Chain 2:                0.817 seconds (Sampling) #> Chain 2:                1.547 seconds (Total) #> Chain 2:"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mse.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean squared error estimate — mse","title":"Mean squared error estimate — mse","text":"Mean squared error estimate","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean squared error estimate — mse","text":"","code":"mse(theta.hat, theta)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean squared error estimate — mse","text":"theta.hat Theta hat theta Theta","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean squared error estimate — mse","text":"\\(sum((theta.hat - theta)^2)/nsim\\)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mse.mcse.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo SE of MSE estimate — mse.mcse","title":"Monte Carlo SE of MSE estimate — mse.mcse","text":"Monte Carlo SE MSE estimate","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mse.mcse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo SE of MSE estimate — mse.mcse","text":"","code":"mse.mcse(theta.hat, theta)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mse.mcse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo SE of MSE estimate — mse.mcse","text":"theta.hat Theta hat theta Theta","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/mse.mcse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo SE of MSE estimate — mse.mcse","text":"\\(sqrt(sum((tmp - mse.est)^2)/(nsim*(nsim-1)))\\)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/outstandR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the difference between treatments using all evidence — outstandR","title":"Calculate the difference between treatments using all evidence — outstandR","text":"main, top-level wrapper {outstandR}. Methods taken RemiroAzocar2022outstandR.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/outstandR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the difference between treatments using all evidence — outstandR","text":"","code":"outstandR(   ipd_trial,   ald_trial,   strategy,   ref_trt = \"C\",   CI = 0.95,   scale = NULL,   ... )"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/outstandR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the difference between treatments using all evidence — outstandR","text":"ipd_trial Individual-level patient data. example, suppose studies C. long format must contain treatment column outcome column consistent formula object. labels treatment used internally must common treatment aggregate-level data trial. ald_trial Aggregate-level data. example, suppose studies B C. column names take form mean.X*: mean patient measurement sd.X*: standard deviation patient measurement y.*.sum: total number events y.*.bar: proportion events N.*: total number individuals strategy Computation strategy function. can strategy_maic(), strategy_stc(), strategy_gcomp_ml()  strategy_gcomp_stan() ref_trt Reference / common / anchoring treatment name; default \"C\" CI Confidence interval; 0,1 scale Relative treatment effect scale. NULL, scale automatically determined model. ... Additional arguments","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/outstandR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the difference between treatments using all evidence — outstandR","text":"List length 3 statistics outstandR class object. Containing statistics pair treatments. mean, variances confidence intervals, contrasts absolute values.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/outstandR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the difference between treatments using all evidence — outstandR","text":"RemiroAzocar2022outstandR","code":""},{"path":[]},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/print.outstandR.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a Summary of a outstandR Object — print.outstandR","title":"Print a Summary of a outstandR Object — print.outstandR","text":"method function print() objects class \"outstandR\" created call outstandR()","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/print.outstandR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a Summary of a outstandR Object — print.outstandR","text":"","code":"# S3 method for class 'outstandR' print(x, ...)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/print.outstandR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a Summary of a outstandR Object — print.outstandR","text":"x Objects class \"outstandR\" ... Additional arguments passed methods","code":""},{"path":[]},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/process_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute performance metrics for a given method — process_metrics","title":"Compute performance metrics for a given method — process_metrics","text":"Compute performance metrics given method","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/process_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute performance metrics for a given method — process_metrics","text":"","code":"process_metrics(means, variances, truth)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/process_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute performance metrics for a given method — process_metrics","text":"means Mean variances Variances truth Truth","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/process_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute performance metrics for a given method — process_metrics","text":"Named list","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/Q.html","id":null,"dir":"Reference","previous_headings":"","what":"Objective function to minimize for standard method of moments MAIC — Q","title":"Objective function to minimize for standard method of moments MAIC — Q","text":"Objective function minimize standard method moments MAIC","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/Q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Objective function to minimize for standard method of moments MAIC — Q","text":"","code":"Q(beta, X)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/Q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objective function to minimize for standard method of moments MAIC — Q","text":"beta Beta coefficient X Covariate value","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/reshape_ald_to_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert from long to wide format — reshape_ald_to_wide","title":"Convert from long to wide format — reshape_ald_to_wide","text":"Convert long wide format","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/reshape_ald_to_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert from long to wide format — reshape_ald_to_wide","text":"","code":"reshape_ald_to_wide(df)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/reshape_ald_to_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert from long to wide format — reshape_ald_to_wide","text":"","code":"df <-    data.frame(     variable = c(\"age\", \"age\", \"y\", \"y\", \"y\", \"y\", \"y\", \"y\", \"y\", \"y\"),     stat = c(\"mean\", \"sd\", \"sum\", \"bar\", \"sd\", \"N\", \"sum\", \"bar\", \"sd\", \"N\"),     study = c(NA, NA, \"B\", \"B\", \"B\", \"B\", \"C\", \"C\", \"C\", \"C\"),     value = c(1,1,1,1,1,1,1,1,1,1))"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/result_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Result Statistics — result_stats","title":"Result Statistics — result_stats","text":"Combining output aggregate level data studies BC adjusted individual level data studies AC single object.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/result_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Result Statistics — result_stats","text":"","code":"result_stats(ipd_stats, ald_stats, CI = 0.95)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/result_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Result Statistics — result_stats","text":"ipd_stats, ald_stats  CI Confidence interval 1-alpha","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/result_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Result Statistics — result_stats","text":"List","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/simulate_ALD_pseudo_pop.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Aggregate-Level Data Pseudo-Population — simulate_ALD_pseudo_pop","title":"Simulate Aggregate-Level Data Pseudo-Population — simulate_ALD_pseudo_pop","text":"Generates synthetic cohort using normal copula based aggregate-level data.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/simulate_ALD_pseudo_pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Aggregate-Level Data Pseudo-Population — simulate_ALD_pseudo_pop","text":"","code":"simulate_ALD_pseudo_pop(formula, ipd, ald, trt_var, rho = NA, N = 1000)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/simulate_ALD_pseudo_pop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Aggregate-Level Data Pseudo-Population — simulate_ALD_pseudo_pop","text":"formula Linear regression formula object. Prognostic factors (PF) main effects effect modifiers (EM) interactions treatment variable, .e., y ~ X1 + trt + trt:X2. covariates PF EM use * syntax. ipd Individual-level patient data. Dataframe one row per patient outcome, treatment covariate columns. ald Aggregate-level data. Single row matrix summary statistics covariate treatment outcomes. format 'mean.' 'sd.' covariates 'y..sum', 'y..bar', 'y.*.sd' treatments B C. assume common distribution treatment arm. rho named square matrix covariate correlations; default NA. N Sample size synthetic cohort. Default 1000.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/simulate_ALD_pseudo_pop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Aggregate-Level Data Pseudo-Population — simulate_ALD_pseudo_pop","text":"data frame representing synthetic pseudo-population.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/simulate_ALD_pseudo_pop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Aggregate-Level Data Pseudo-Population — simulate_ALD_pseudo_pop","text":"","code":"if (FALSE) { # \\dontrun{ formula <- outcome ~ treatment + age ipd <- data.frame(treatment = c(0, 1), outcome = c(1, 0), age = c(30, 40)) ald <- data.frame() simulate_ALD_pseudo_pop(formula, ipd, ald, trt_var = \"treatment\", N = 1000) } # }"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/strategy.html","id":null,"dir":"Reference","previous_headings":"","what":"New strategy objects — strategy_maic","title":"New strategy objects — strategy_maic","text":"Create type strategy class modelling approach.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/strategy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New strategy objects — strategy_maic","text":"","code":"strategy_maic(   formula = NULL,   family = gaussian(link = \"identity\"),   trt_var = NULL,   R = 1000L )  strategy_stc(   formula = NULL,   family = gaussian(link = \"identity\"),   trt_var = NULL )  strategy_gcomp_ml(   formula = NULL,   family = gaussian(link = \"identity\"),   trt_var = NULL,   rho = NA,   R = 1000L,   N = 1000L )  strategy_gcomp_stan(   formula = NULL,   family = gaussian(link = \"identity\"),   trt_var = NULL,   rho = NA,   N = 1000L )  strategy_mim(   formula = NULL,   family = gaussian(link = \"identity\"),   trt_var = NULL,   rho = NA,   N = 1000L )  new_strategy(strategy, ...)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/strategy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New strategy objects — strategy_maic","text":"formula Linear regression formula object. Prognostic factors (PF) main effects effect modifiers (EM) interactions treatment variable, .e., y ~ X1 + trt + trt:X2. covariates PF EM use * syntax. family 'family' object specifying distribution link function (e.g., 'binomial'). See stats::family() details. trt_var Treatment variable name R number resamples used non-parametric bootstrap rho named square matrix covariate correlations; default NA. N Synthetic sample size g-computation strategy Class name strategy_maic, strategy_stc, strategy_gcomp_ml, strategy_gcomp_stan ... Additional arguments","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/strategy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"New strategy objects — strategy_maic","text":"maic class object stc class object gcomp_ml class object gcomp_stan class object mim class object","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/strategy.html","id":"matching-adjusted-indirect-comparison-maic-","dir":"Reference","previous_headings":"","what":"Matching-adjusted indirect comparison (MAIC)","title":"New strategy objects — strategy_maic","text":"MAIC form non-parametric likelihood reweighting method allows propensity score logistic regression model estimated without IPD AC population. mean outcomes \\(\\mu_{t(AC)}\\) treatment \\(t = ,B\\) AC target population estimated taking weighted average outcomes \\(Y\\) \\(N\\) individuals arm \\(t\\) AB population. Used compare marginal treatment effects cross-trial differences effect modifiers limited patient-level data. $$ \\hat{Y}_{} = \\frac{\\sum_{=1}^{N} Y_{(AB)} w_{}}{\\sum_{=1}^{N} w_{}} $$ weight \\(w_{}\\) assigned \\(\\)-th individual receiving treatment \\(t\\) equal odds enrolled AC trial vs AB trial.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/strategy.html","id":"simulated-treatment-comparison-stc-","dir":"Reference","previous_headings":"","what":"Simulated treatment comparison (STC)","title":"New strategy objects — strategy_maic","text":"Outcome regression-based method targets conditional treatment effect. STC modification covariate adjustment method. outcome model fitted using IPD AB trial. example, $$ g(\\mu_{t(AB)}(X)) = \\beta_0 + \\beta_1^T X + (\\beta_B + \\beta_2^T X^{EM}) (t=B) $$ \\(\\beta_0\\) intercept term, \\(\\beta_1\\) vector coefficients prognostic variables, \\(\\beta_B\\) relative effect treatment B compared \\(X=0\\), \\(\\beta_2\\) vector coefficients effect modifiers \\(X^{EM}\\) subvector full covariate vector \\(X\\)), \\(\\mu_{t(AB)}(X)\\) expected outcome individual assigned treatment \\(t\\) covariate values \\(X\\) transformed onto chosen linear predictor scale link function \\(g(\\cdot)\\).","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/strategy.html","id":"g-computation-maximum-likelihood","dir":"Reference","previous_headings":"","what":"G-computation maximum likelihood","title":"New strategy objects — strategy_maic","text":"G-computation marginalizes conditional estimates separating regression modelling estimation marginal treatment effect versus C. example, regression model observed outcome \\(y\\) covariates \\(x\\) treatment \\(z\\) fitted AC IPD: $$ g(\\mu_n) = \\beta_0 + \\boldsymbol{x}_n \\boldsymbol{\\beta_1} + (\\beta_z + \\boldsymbol{x_n^{EM}} \\boldsymbol{\\beta_2}) \\mbox{}(z_n=1) $$ context G-computation, regression model called “Q-model\". fitted Q-model, regression coefficients treated nuisance parameters. parameters applied simulated covariates \\(x*\\) predict hypothetical outcomes subject possible treatments. Namely, pair predicted outcomes, also called potential outcomes, C, generated subject. plugging treatment C regression fit every simulated observation, predict marginal outcome mean hypothetical scenario units treatment C: $$ \\hat{\\mu}_0 = \\int_{x^*} g^{-1} (\\hat{\\beta}_0 + x^* \\hat{\\beta}_1 ) p(x^*) dx^* $$ estimate marginal population-average treatment effect versus C linear predictor scale, one back-transforms scale average predictions, taken subjects natural outcome scale, calculates difference average linear predictions: $$ \\hat{\\Delta}^{(2)}_{10} = g(\\hat{\\mu}_1) - g(\\hat{\\mu}_0) $$","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/strategy.html","id":"g-computation-bayesian","dir":"Reference","previous_headings":"","what":"G-computation Bayesian","title":"New strategy objects — strategy_maic","text":"difference Bayesian G-computation maximum-likelihood counterpart estimated distribution predicted outcomes. Bayesian approach also marginalizes, integrates standardizes joint posterior distribution conditional nuisance parameters outcome regression, well joint covariate distribution. Draw vector size \\(N*\\) predicted outcomes \\(y*z\\) set intervention \\(z* \\\\{0, 1\\}\\) posterior predictive distribution specific treatment. defined \\(p(y*_{z*} | \\mathcal{D}_{AC}) = \\int_{\\beta} p(y*_{z*} | \\beta) p(\\beta | \\mathcal{D}_{AC}) d\\beta\\) \\(p(\\beta | \\mathcal{D}_{AC})\\) posterior distribution outcome regression coefficients \\(\\beta\\), encode predictor-outcome relationships observed AC trial IPD. given : $$ p(y*_{z*} \\mid \\mathcal{D}_{AC}) = \\int_{x*} p(y* \\mid z*, x*, \\mathcal{D}_{AC}) p(x* \\mid \\mathcal{D}_{AC}) dx* $$ $$ = \\int_{x*} \\int_{\\beta} p(y* \\mid z*, x*, \\beta) p(x* \\mid \\beta) p(\\beta \\mid \\mathcal{D}_{AC}) d\\beta dx* $$ practice, integrals can approximated numerically, using full Bayesian estimation via Markov chain Monte Carlo (MCMC) sampling.","code":""},{"path":[]},{"path":[]},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/trial_treatment_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial treatment effect with aggregate data — trial_treatment_effect","title":"Trial treatment effect with aggregate data — trial_treatment_effect","text":"Calculate $$\\log(\\sum y_k (N_k - \\sum y_k))$$.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/trial_treatment_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial treatment effect with aggregate data — trial_treatment_effect","text":"","code":"trial_treatment_effect(ald, tid)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/trial_treatment_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial treatment effect with aggregate data — trial_treatment_effect","text":"ald Aggregate-level data tid Treatment label","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/trial_treatment_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trial treatment effect with aggregate data — trial_treatment_effect","text":"Value","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/trial_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial variance with aggregate data — trial_variance","title":"Trial variance with aggregate data — trial_variance","text":"Calculate $$1/(\\sum y_k) + 1/(N_k - \\sum y_k)$$.","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/trial_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trial variance with aggregate data — trial_variance","text":"","code":"trial_variance(ald, tid)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/trial_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trial variance with aggregate data — trial_variance","text":"ald Aggregate-level data tid Treatment label","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/trial_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trial variance with aggregate data — trial_variance","text":"Value","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/var.ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Variability ratio — var.ratio","title":"Variability ratio — var.ratio","text":"Variability ratio","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/var.ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variability ratio — var.ratio","text":"","code":"var.ratio(theta.hat, std.err)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/var.ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variability ratio — var.ratio","text":"theta.hat Theta hat std.err Standard error","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/var.ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variability ratio — var.ratio","text":"Ratio","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/var.ratio.mcse.html","id":null,"dir":"Reference","previous_headings":"","what":"Variability ratio MCSE — var.ratio.mcse","title":"Variability ratio MCSE — var.ratio.mcse","text":"Approximation ratio variance based independence avg. se emp.se see wolter2007outstandR","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/var.ratio.mcse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variability ratio MCSE — var.ratio.mcse","text":"","code":"var.ratio.mcse(avg.se, emp.se, var.avg.se, var.emp.se)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/var.ratio.mcse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variability ratio MCSE — var.ratio.mcse","text":"avg.se Average SE emp.se Emp SE var.avg.se Variance average SE var.emp.se Variance Emp SE","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/var.ratio.mcse.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variability ratio MCSE — var.ratio.mcse","text":"wolter2007outstandR","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/var_by_pooling.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance estimate by pooling — var_by_pooling","title":"Variance estimate by pooling — var_by_pooling","text":"Use combining rules estimate 2003","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/var_by_pooling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance estimate by pooling — var_by_pooling","text":"","code":"var_by_pooling(M, bar.v, b)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/var_by_pooling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance estimate by pooling — var_by_pooling","text":"M Number syntheses used analysis stage (high low Monte Carlo error) bar.v \"within\" variance (average variance point estimates) b \"\" variance (sample variance point estimates)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/wald_type_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Wald-type interval estimates — wald_type_interval","title":"Wald-type interval estimates — wald_type_interval","text":"Constructed using t-distribution nu degrees freedom","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/wald_type_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wald-type interval estimates — wald_type_interval","text":"","code":"wald_type_interval(M, bar.v, b)"},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/reference/wald_type_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wald-type interval estimates — wald_type_interval","text":"M Number syntheses used analysis stage (high low Monte Carlo error) bar.v \"within\" variance (average variance point estimates) b \"\" variance (sample variance point estimates)","code":""},{"path":"https://StatisticsHealthEconomics.github.io/outstandR/news/index.html","id":"outstandr-development-version-0009","dir":"Changelog","previous_headings":"","what":"outstandR (development version) 0.009","title":"outstandR (development version) 0.009","text":"Included correlation ALD simulations optional function argument (d48d0ab) print method available (983cb2f) Absolute values returned, well contrasts (2f1fbd7) Binary, continuous count data outcomes allowed Separate vignettes written binary, continuous count data pkgdown site built published GitHub Ability select outcome scale log-odds, risk difference, relative risk Move covariate generation separate simcovariates package","code":""}]
